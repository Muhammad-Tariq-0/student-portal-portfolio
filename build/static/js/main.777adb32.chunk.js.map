{"version":3,"sources":["IT/loader-images/uot.png","IT/IT-Admin-Side/pages/images/program.jpg","IT/IT-Admin-Side/pages/images/book1.png","IT/user/uot.png","IT/IT-Admin-Side/components/Menu.js","IT/functions/AddSemester.js","IT/IT-Admin-Side/pages/api/SemesterAddition.js","IT/functions/DeleteSemester.js","IT/functions/DeleteThisSemesterStudents.js","IT/functions/DeleteThisSemesterSubjects.js","IT/IT-Admin-Side/pages/api/SemesterDeletion.js","IT/functions/UpdateSemester.js","IT/functions/UpdateStudentSemester.js","IT/IT-Admin-Side/pages/api/SemesterUpdation.js","IT/functions/ReadSemester.js","IT/functions/ReadStudent.js","IT/functions/ReadSubjects.js","IT/IT-Admin-Side/pages/Semester.js","IT/functions/AddProgram.js","IT/IT-Admin-Side/pages/api/ProgramAddition.js","IT/IT-Admin-Side/TimeTable/firebase.js","IT/IT-Admin-Side/TimeTable/Form.js","IT/IT-Admin-Side/TimeTable/Todo.js","IT/IT-Admin-Side/TimeTable/TodoList.js","IT/IT-Admin-Side/TimeTable/UploadImage.js","IT/functions/ReadPrograms.js","IT/IT-Admin-Side/pages/Programs.js","IT/functions/AddStudent.js","IT/IT-Admin-Side/pages/api/StudentAddition.js","IT/functions/UpdateStudent.js","IT/IT-Admin-Side/pages/api/StudentUpdation.js","IT/functions/DeleteStudent.js","IT/IT-Admin-Side/pages/api/StudentDeletion.js","IT/IT-Admin-Side/pages/Students.js","IT/functions/AddSubject.js","IT/IT-Admin-Side/pages/api/SubjectAddition.js","IT/IT-Admin-Side/pages/api/SubjectDeletion.js","IT/IT-Admin-Side/pages/Subjects.js","IT/IT-Admin-Side/pages/Results.js","IT/functions/AddResult.js","IT/IT-Admin-Side/pages/api/SubjectResultAddition.js","IT/IT-Admin-Side/pages/SubjectResultAdd.js","IT/functions/UpdateResult.js","IT/IT-Admin-Side/pages/api/ResultUpdation.js","IT/functions/DeleteResult.js","IT/IT-Admin-Side/pages/api/ResultDeletion.js","IT/functions/ReadResult.js","IT/IT-Admin-Side/pages/ResultReading.js","IT/IT-Admin-Side/pages/AllSemesterResult.js","IT/IT-Admin-Side/pages/Dashboard.js","IT/functions/DeleteComplaint.js","IT/IT-Admin-Side/pages/api/ComplaintDeletion.js","IT/functions/ReadComplaints.js","IT/IT-Admin-Side/pages/ComplaintBox.js","IT/ItAdmin.js","IT/user/Navbar.js","IT/user/pages/Result.js","IT/user/TimeTable/UploadImage.js","IT/user/TimeTable/Todo.js","IT/user/TimeTable/TodoList.js","IT/user/pages/Dashboard.js","IT/user/pages/AllSemesterResult.js","IT/functions/AddComplaint.js","IT/user/pages/Complaint.js","IT/user/pages/SubmittedComplaints.js","IT/user/Sidebar.js","IT/ItStudent.js","App.js","serviceWorker.js","index.js","IT/loader-images/final-uot.gif"],"names":["module","exports","Header","Layout","Menubar","useAuth0","logout","user","className","style","marginLeft","to","src","logo","alt","width","height","theme","mode","defaultSelectedKeys","Item","key","InboxOutlined","rel","onClick","faunadb","Client","secret","query","q","Logout","LogoutOutlined","require","config","Addsemester","semester","a","adminClient","Create","Collection","data","result","statusCode","body","JSON","stringify","message","ref","id","toString","pname","Swal","fire","input","inputLabel","inputPlaceholder","showCancelButton","inputSemester","value","undefined","console","log","SemesterAddition","DeleteSemester","Delete","Ref","DeleteThisSemesterStudents","DeleteThisSemesterSubjects","sname","StudentData","SubjectData","title","text","icon","confirmButtonColor","cancelButtonColor","confirmButtonText","then","isConfirmed","map","stData","length","el","res","split","SemesterDeletion","UpdateSemester","NewSemesterValue","Update","UpdateStudentSemester","semN0","inputValue","inputNewSemester","SemesterUpdation","ReadSemester","client","Map","Paginate","Documents","Lambda","x","Get","ReadStudent","ReadSubjects","Meta","Card","Semester","useParams","useState","mydata","setData","useEffect","catch","error","DataFetch","setStudentData","setSubjectData","type","PlusOutlined","gutter","xs","sm","md","lg","textAlign","marginRight","cover","actions","DeleteOutlined","EditOutlined","params","ArrowRightOutlined","spinner","AddProgram","inputProgram","program","ProgramAddition","firebase","initializeApp","projectId","appId","databaseURL","storageBucket","locationId","apiKey","authDomain","messagingSenderId","Form","setTitle","onChange","e","target","todoRef","database","todo","complete","push","Todo","child","remove","float","TodoList","todoList","setTodoList","on","snapshot","todos","val","index","UploadImage","imageUrl","setImageUrl","state","setstate","readImages","file","files","uuid","storageRef","storage","imageRef","put","getDownloadURL","url","set","newState","imageUrls","urls","frameBorder","delete","deleteImage","accept","disabled","ReadPrograms","Programs","AddStudent","studentRoll","studentName","studentEmail","studentGender","studentSemester","name","roll_n0","email","gender","SendData","receive","inputOptions","mixin","progressSteps","queue","StudentAddition","UpdateStudent","rollN0","StudentUpdation","DeleteStudent","StudentDeletion","Students","UserAddOutlined","bordered","itemLayout","avatar","UserOutlined","description","danger","marginTop","AddSubject","subject","credit_hours","SubjectAddition","Subjects","hoverable","SubjectDeletion","Results","subj","FilePdfOutlined","AddResult","Mid","Final","Sessional","total","SubjectGPA","SubjectResultAddition","SubjectResultAdd","setMid","setFinal","setSessional","setSubjects","border","subjectData","placeholder","event","parseInt","increfn","UpdateResult","mid","final","sessional","ResultUpdation","DeleteResult","ResultDeletion","ReadResult","ResultReading","gpa","Total_credit_hours","rsData","lastSem","Total_GPA","toFixed","AllSemesterResult","Total_CGPA","Tabs","backgroundColor","TeamOutlined","ProfileOutlined","PieChartOutlined","Dashboard","path","element","exact","DeleteComplaint","ComplaintDeletion","ReadComplaints","ComplaintBox","Complaints","setComplaints","complaint","fontStyle","StudentName","ItAdmin","Navbar","fontSize","fontFamily","cursor","href","Result","setStudents","setResult","student","subjects","AddComplaint","Title","Description","TextArea","Input","Complaint","Name","setName","setDescription","toLowerCase","maxWidth","rows","block","ComplaintSubmission","SubmittedComplaints","complaints","Sidebar","DashboardOutlined","FileOutlined","CalendarOutlined","ItStudent","pageWrapId","outerContainerId","App","isAuthenticated","isLoading","React","role","setRole","loginWithRedirect","Fragment","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","domain","process","clientId","redirectUri","origin","document","getElementById","URL","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,kWCUnCC,G,OAAWC,IAAXD,QA4COE,EA1CC,WAAM,MAEKC,cAAjBC,EAFY,EAEZA,OAAQC,EAFI,EAEJA,KAShB,OACE,kBAAC,IAAD,KACE,kBAACL,EAAD,CAAQM,UAAU,UAChB,yBAAKA,UAAU,OAAOC,MAAO,CAAEC,WAAY,OACzC,kBAAC,IAAD,CAAMC,GAAG,KACP,yBAAKC,IAAKC,IAAMC,IAAI,OAAOC,MAAO,GAAIC,OAAQ,KAC9C,0BAAMR,UAAU,SAAhB,wBAKJ,kBAAC,IAAD,CAAMS,MAAM,QAAQC,KAAK,aAAaC,oBAAqB,CAAC,MAC1D,kBAAC,IAAKC,KAAN,CAAWC,IAAI,KAEb,kBAAC,IAAD,CAAMV,GAAG,eAAT,mBACoB,kBAACW,EAAA,EAAD,QAItB,kBAAC,IAAKF,KAAN,CAAWC,IAAI,KACb,kBAAC,IAAD,CAAME,IAAI,sBAAsBZ,GAAG,KAAKa,QA5B7B,WACJ,IAAIC,IAAQC,OAAO,CAChCC,OAAQpB,EAAK,mCAAmCoB,SAE3CC,MAAMC,QAAEC,QAAO,IACtBxB,MAuBQ,eACgB,kBAACyB,EAAA,EAAD,Y,iIC5CtBN,EAAUO,EAAQ,IACtBH,EAAIJ,EAAQG,MACDI,EAAQ,IACdC,SACA,IAAMC,EAAW,uCAAG,WAAOC,EAAUR,GAAjB,iBAAAS,EAAA,sEAGnBC,EAAc,IAAIZ,EAAQC,OAAO,CAAEC,WAHhB,SAKFU,EAAYT,MAC/BC,EAAES,OACAT,EAAEU,WAAW,aACb,CAAEC,KAAM,CAAEL,SAAUA,MARD,cAKjBM,EALiB,yBAYhB,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAdtB,yDAiBhB,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAjBb,yDAAH,wD,4CCFxB,iCAAAb,EAAA,6DAAiCc,EAAjC,EAAiCA,MAAjC,SACyCC,IAAKC,KAAK,CAC/CC,MAAO,SACPC,WAAY,uBACZC,iBAAkB,kBAClBC,kBAAkB,IALtB,oBACiBC,EADjB,EACUC,QAQNP,IAAKC,KAAL,4BAA+BK,SAGXE,IAAlBF,EAZN,iBAaIG,QAAQC,IAAI,uBAbhB,yCAeU3B,EAAY,GAAD,OAAIgB,EAAJ,qBAAsBO,GAAgB,4CAf3D,6C,sBAkBeK,M,4CCpBTrC,EAAUO,EAAQ,IACtBH,EAAIJ,EAAQG,MACDI,EAAQ,IACdC,SACA,IAAM8B,EAAc,uCAAG,WAAOf,EAAIrB,GAAX,iBAAAS,EAAA,sEAGtBC,EAAc,IAAIZ,EAAQC,OAAO,CAAEC,WAHb,SAKLU,EAAYT,MAC/BC,EAAEmC,OAAOnC,EAAEoC,IAAIpC,EAAEU,WAAW,aAAaS,KANjB,cAKpBP,EALoB,yBASnB,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAXnB,yDAcnB,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAdV,yDAAH,wDCJrBxB,EAAUO,EAAQ,IACtBH,EAAIJ,EAAQG,MACDI,EAAQ,IACdC,SACA,IAAMiC,EAA0B,uCAAG,WAAOlB,EAAIrB,GAAX,iBAAAS,EAAA,sEAGlCC,EAAc,IAAIZ,EAAQC,OAAO,CAAEC,WAHD,SAKjBU,EAAYT,MAC/BC,EAAEmC,OAAOnC,EAAEoC,IAAIpC,EAAEU,WAAW,YAAYS,KANJ,cAKhCP,EALgC,yBAS/B,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAXP,yDAc/B,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAdE,yDAAH,wDCJjCxB,EAAUO,EAAQ,IACtBH,EAAIJ,EAAQG,MACDI,EAAQ,IACdC,SACA,IAAMkC,EAA0B,uCAAG,WAAOnB,EAAIrB,GAAX,iBAAAS,EAAA,sEAGlCC,EAAc,IAAIZ,EAAQC,OAAO,CAAEC,WAHD,SAKjBU,EAAYT,MAC/BC,EAAEmC,OAAOnC,EAAEoC,IAAIpC,EAAEU,WAAW,YAAYS,KANJ,cAKhCP,EALgC,yBAS/B,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAXP,yDAc/B,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAdE,yDAAH,wD,4CCCvC,WAAgCmB,EAAOpB,EAAIqB,EAAaC,GAAxD,SAAAlC,EAAA,sDACEwB,QAAQC,IAAIO,EAAOpB,EAAIqB,EAAaC,GACpCnB,IAAKC,KAAK,CACRmB,MAAO,gBACPC,KAAM,GACNC,KAAM,UACNjB,kBAAkB,EAClBkB,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,MAAK,SAACpC,GACHA,EAAOqC,cACTf,EAAef,EAAI,4CACnBqB,EAAYU,KAAI,SAACC,GACf,GAAIZ,IAAUY,EAAOxC,KAAKL,SAAU,CAClC,IAAIa,EAAKgC,EAAOjC,IAAIW,MAAMV,GAC1BkB,EAA2BlB,EAAI,4CAEjC,OAAQ,iCAEPsB,EAAYW,OAIfX,EAAYS,KAAI,SAACG,EAAI7D,GACnB,IACI8D,EADUD,EAAG1C,KAAK+B,MACJa,MAAM,KAExB,GADAxB,QAAQC,IAAIsB,EAAI,IACZA,EAAI,KAAOf,EAAO,CACpB,IAAIpB,EAAKkC,EAAGnC,IAAIW,MAAMV,GACtBmB,EAA2BnB,EAAI,4CAEjC,OAAQ,iCAXTY,QAAQC,IAAI,kBAcbV,IAAKC,KACH,WACA,6BACA,eAtCR,4C,sBA4CeiC,M,kDCjDT5D,EAAUO,EAAQ,IACtBH,EAAIJ,EAAQG,MACDI,EAAQ,IACdC,SACA,IAAMqD,GAAc,uCAAG,WAAOtC,EAAGuC,EAAkB5D,GAA5B,iBAAAS,EAAA,sEAGtBC,EAAc,IAAIZ,EAAQC,OAAO,CAAEC,WAHb,SAKLU,EAAYT,MAC/BC,EAAE2D,OAAO3D,EAAEoC,IAAIpC,EAAEU,WAAW,aAAcS,GACxC,CAAER,KAAM,CAAEL,SAAUoD,MAPE,cAKpB9C,EALoB,yBAWnB,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAbnB,yDAgBnB,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAhBV,yDAAH,0DCJrBxB,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMwD,GAAqB,uCAAG,WAAOzC,EAAGuC,EAAkB5D,GAA5B,iBAAAS,EAAA,sEAG7BC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHN,SAKZU,EAAYT,MAC/BC,GAAE2D,OAAO3D,GAAEoC,IAAIpC,GAAEU,WAAW,YAAaS,GACvC,CAAER,KAAM,CAAEL,SAAUoD,MAPS,cAK3B9C,EAL2B,yBAW1B,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAbZ,yDAgB1B,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAhBH,yDAAH,0D,8CCElC,WAAgCC,EAAOkB,EAAOpB,EAAIqB,EAAaC,GAA/D,qBAAAlC,EAAA,6DACEwB,QAAQC,IAAIX,EAAOkB,EAAOpB,EAAIqB,GAC1BqB,EAAQtB,EAAMgB,MAAM,KACxBxB,QAAQC,IAAI6B,EAAM,IAHpB,SAK4CvC,IAAKC,KAAK,CAClDC,MAAO,SACPC,WAAY,uBACZqC,WAAYD,EAAM,GAClBnC,iBAAkB,kBAClBC,kBAAkB,IAVtB,oBAKiBoC,EALjB,EAKUlC,QASNP,IAAKC,KAAL,4BAA+BwC,SAERjC,IAArBiC,EAhBN,iBAiBIhC,QAAQC,IAAI,uBAjBhB,+BAoBQ0B,EApBR,UAoB8BrC,EApB9B,qBAoBgD0C,GApBhD,UAqBUN,GAAetC,EAAIuC,EAAkB,4CArB/C,QAwBElB,EAAYU,KAAI,SAACC,GACf,GAAIZ,IAAUY,EAAOxC,KAAKL,SACxB,QAAyBwB,IAArBiC,EACFhC,QAAQC,IAAI,2BAET,CACH,IAAI0B,EAAgB,UAAMrC,EAAN,qBAAwB0C,GAC5CH,GAAsBT,EAAOjC,IAAIW,MAAMV,GAAIuC,EAAkB,4CAGjE,OAAO,iCAELjB,EAAYW,OAIdX,EAAYS,KAAI,SAACG,EAAI7D,GACnB,IACI8D,EADUD,EAAG1C,KAAK+B,MACJa,MAAM,KAKxB,OAJAxB,QAAQC,IAAIsB,EAAI,IACZA,EAAI,KAAOf,GACbD,EAA2Be,EAAGnC,IAAIW,MAAMV,GAAI,4CAEvC,iCAVTY,QAAQC,IAAI,kBArChB,6C,sBAmDegC,O,mFCzDTpE,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAM6D,GAAY,uCAAG,WAAOnE,GAAP,iBAAAS,EAAA,sEAEpB2D,EAAS,IAAItE,GAAQC,OAAO,CAAEC,WAFV,SAGLoE,EAAOnE,MACxBC,GAAEmE,IACQnE,GAAEoE,SAASpE,GAAEqE,UAAUrE,GAAEU,WAAW,eACpCV,GAAEsE,QAAO,SAAAC,GAAC,OAAIvE,GAAEwE,IAAID,QANR,cAGpB3D,EAHoB,yBAUjBA,EAAOD,MAVU,yDAYjB,CAAEE,WAAY,IAAKC,KAAM,KAAIM,aAZZ,yDAAH,sDCJnBxB,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMqE,GAAW,uCAAG,WAAO3E,GAAP,iBAAAS,EAAA,sEAEnB2D,EAAS,IAAItE,GAAQC,OAAO,CAAEC,WAFX,SAGJoE,EAAOnE,MACxBC,GAAEmE,IACAnE,GAAEoE,SAASpE,GAAEqE,UAAUrE,GAAEU,WAAW,cACpCV,GAAEsE,QAAO,SAAAC,GAAC,OAAIvE,GAAEwE,IAAID,QAND,cAGnB3D,EAHmB,yBAUhBA,EAAOD,MAVS,yDAYhB,CAAEE,WAAY,IAAKC,KAAM,KAAIM,aAZb,yDAAH,sDCJlBxB,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMsE,GAAY,uCAAG,WAAO5E,GAAP,iBAAAS,EAAA,sEAEpB2D,EAAS,IAAItE,GAAQC,OAAO,CAAEC,WAFV,SAGLoE,EAAOnE,MACxBC,GAAEmE,IACAnE,GAAEoE,SAASpE,GAAEqE,UAAUrE,GAAEU,WAAW,cACpCV,GAAEsE,QAAO,SAAAC,GAAC,OAAIvE,GAAEwE,IAAID,QANA,cAGpB3D,EAHoB,yBAUjBA,EAAOD,MAVU,yDAYjB,CAAEE,WAAY,IAAKC,KAAM,KAAIM,aAZZ,yDAAH,sDCcjBuD,GAASC,IAATD,KA0IOE,GAxIE,WAAO,IAChBxD,EAAUyD,cAAVzD,MADe,EAIK0D,mBAAS,IAJd,mBAIdC,EAJc,KAINC,EAJM,KAKrBC,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACE0D,GAAa,4CACVjB,MAAK,SAACrC,GACLsE,EAAQtE,MAETwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACL,IAhBiB,MAmBiBD,mBAAS,IAnB1B,mBAmBdvC,EAnBc,KAmBD8C,EAnBC,KAoBrBJ,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEkE,GAAY,4CACTzB,MAAK,SAACrC,GACL2E,EAAe3E,MAEhBwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAAC7C,IA/BiB,MAiCiBuC,mBAAS,IAjC1B,mBAiCdtC,EAjCc,KAiCD8C,EAjCC,KA8CrB,OAZAL,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEmE,GAAa,4CACV1B,MAAK,SAACrC,GACL4E,EAAe5E,MAEhBwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAAC5C,IAEF,yBAAK9D,UAAU,mBACb,6BACA,gDACA,kBAAC,IAAD,CACEgB,QAAS,WACPsC,EAAiB,CAAEZ,WAErBmE,KAAK,WAJP,gBAMe,kBAACC,GAAA,EAAD,OAGf,6BACA,6BACA,6BACET,EAAO5B,OAKP,kBAAC,IAAD,CAAKsC,OAAQ,CAAC,GAAI,KACfV,EAAO9B,KAAI,SAACG,EAAI7D,GAGf,OAFe6D,EAAG1C,KAAKL,SACJiD,MAAM,KACjB,KAAOlC,EAGX,kBAAC,IAAD,CAAKsE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC/B,kBAAC,IAAD,CACEnH,UAAU,OACVa,IAAKA,EACLZ,MAAO,CACLmH,UAAW,SACXlH,WAAY,OACZmH,YAAa,OACb9G,MAAO,KAET+G,MAAO,yBAAKhH,IAAI,UAAUF,IAAKC,MAC/BkH,QAAS,CACP,kBAAC,IAAD,CAASxD,MAAM,UACb,kBAACyD,EAAA,EAAD,CACE3G,IAAI,SACJG,QAAS,WACP6D,EACEH,EAAG1C,KAAKL,SACR+C,EAAGnC,IAAIW,MAAMV,GACbqB,EACAC,OAKR,kBAAC,IAAD,CAASC,MAAM,QACb,kBAAC0D,EAAA,EAAD,CACE5G,IAAI,OACJG,QAAS,WACPqE,GACE3C,EACAgC,EAAG1C,KAAKL,SACR+C,EAAGnC,IAAIW,MAAMV,GACbqB,EACAC,OAKR,kBAAC,IAAD,CAASC,MAAM,QACb,kBAAC,IAAD,CACE5D,GAAE,oBAAeuE,EAAG1C,KAAKL,UACzB+F,OAAQ,CAAE9D,MAAOc,EAAG1C,KAAKL,WAEzB,kBAACgG,EAAA,EAAD,UAKN,kBAAC3B,GAAD,CAAMjC,MAAOW,EAAG1C,KAAKL,aAKtB,kCAjEX,gCACE,yBAAKvB,IAAKwH,KAASrH,MAAO,IAAKC,OAAQ,IAAKF,IAAI,kBCpFpDW,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMoG,GAAU,uCAAG,WAAOC,EAAc3G,GAArB,iBAAAS,EAAA,sEAGlBC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHjB,SAKDU,EAAYT,MAC/BC,GAAES,OACAT,GAAEU,WAAW,YACb,CAAEC,KAAM,CAAE+F,QAASD,MARD,cAKhB7F,EALgB,yBAYf,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAdvB,yDAiBf,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAjBd,yDAAH,wD,8CCFvB,8BAAAb,EAAA,sEACwCe,IAAKC,KAAK,CAC9CC,MAAO,OACPC,WAAY,gBACZC,iBAAkB,eAClBC,kBAAkB,IALtB,oBACiB8E,EADjB,EACU5E,QAONP,IAAKC,KAAL,2BAA8BkF,SAGT3E,IAAjB2E,EAXR,gBAYM1E,QAAQC,IAAI,uBAZlB,wCAeUwE,GAAWC,EAAa,4CAflC,6C,sBAkBeE,O,sDCPfC,KAASC,cAXc,CACrBC,UAAW,WACXC,MAAO,2CACPC,YAAa,+CACbC,cAAe,uBACfC,WAAY,cACZC,OAAQ,0CACRC,WAAY,2BACZC,kBAAmB,gBAKNT,UAAf,E,UCXe,SAASU,KAAQ,IAAD,EACHvC,mBAAS,IADN,mBACtBrC,EADsB,KACf6E,EADe,KAgB7B,OACE,6BACE,kBAAC,KAAD,CAAO/B,KAAK,OAAOgC,SAfA,SAACC,GACtBF,EAASE,EAAEC,OAAO7F,QAc6BA,MAAOa,IAAS,6BAAK,6BAClE,kBAAC,IAAD,CAAQ8C,KAAK,UAAU7F,QAbR,WAEjB,IAAMgI,EAAUf,GAASgB,WAAW1G,IAAI,QAClC2G,EAAO,CACXnF,QACAoF,UAAU,GAGZH,EAAQI,KAAKF,KAKX,Y,wBChBS,SAASG,GAAT,GAAyB,IAATH,EAAQ,EAARA,KAK7B,OACE,6BACE,6BACA,kBAAC,KAAD,KAAOA,EAAKnF,MAAM,kBAAC,IAAD,CAASA,MAAM,UAC/B,kBAACyD,EAAA,EAAD,CAAgBxG,QARH,WACDiH,GAASgB,WAAW1G,IAAI,QAAQ+G,MAAMJ,EAAK1G,IACnD+G,UAMiCtJ,MAAO,CAACuJ,MAAM,cCZ5C,SAASC,KAAY,IAAD,EACDrD,qBADC,mBAC1BsD,EAD0B,KAChBC,EADgB,KAejC,OAZApD,qBAAU,WACQ0B,GAASgB,WAAW1G,IAAI,QAChCqH,GAAG,SAAS,SAACC,GACnB,IAAMC,EAAQD,EAASE,MACjBL,EAAW,GACjB,IAAK,IAAIlH,KAAMsH,EACbJ,EAASN,KAAT,cAAgB5G,MAAOsH,EAAMtH,KAE/BmH,EAAYD,QAEb,IAGD,6BACGA,EACGA,EAASnF,KAAI,SAAC2E,EAAMc,GAAP,OAAiB,kBAACX,GAAD,CAAMH,KAAMA,EAAMrI,IAAKmJ,OACrD,I,uBClBK,SAASC,KAAe,IAAD,EACJ7D,mBAAS,IADL,mBAC7B8D,EAD6B,KACnBC,EADmB,OAGV/D,oBAAS,GAHC,mBAG7BgE,EAH6B,KAGtBC,EAHsB,KAK9BC,EAAU,uCAAG,WAAOxB,GAAP,qBAAAlH,EAAA,6DACX2I,EAAOzB,EAAEC,OAAOyB,MAAM,GACtBhI,EAAKiI,eACLC,EAAazC,GAAS0C,UAAUpI,IAAI,SAAS+G,MAAM9G,GACnDoI,EAAW3C,GAASgB,WAAW1G,IAAI,SAAS+G,MAAM,SAASA,MAAM9G,GAJtD,SAKXkI,EAAWG,IAAIN,GALJ,OAMjBG,EAAWI,iBAAiBzG,MAAK,SAAC0G,GAChCH,EAASI,IAAID,GACb,IAAME,EAAQ,uBAAOf,GAAP,CAAiB,CAAE1H,KAAIuI,SACrCZ,EAAYc,MATG,2CAAH,sDAsChB,OALA1E,qBAAU,WAnBS0B,GAASgB,WAAW1G,IAAI,SAAS+G,MAAM,SAC/CM,GAAG,SAAS,SAACC,GACpB,IAAMqB,EAAYrB,EAASE,MACrBoB,EAAO,GACb,IAAK,IAAI3I,KAAM0I,EACbC,EAAK/B,KAAK,CAAE5G,KAAIuI,IAAKG,EAAU1I,KAEjC,IAAMyI,EAAQ,uBAAOf,GAAaiB,GAClChB,EAAYc,QAab,IAEH7H,QAAQC,IAAI6G,EAASzF,OAAOyF,GAE1B,6BACE,6CACCA,EACGA,EAAS3F,KAAI,YAAkB,IAAf/B,EAAc,EAAdA,GAAIuI,EAAU,EAAVA,IACpB,OACE,yBAAKlK,IAAK2B,GACR,4BAAQpC,IAAK2K,EAAKhH,MAAM,GAAGzD,IAAI,UAAUC,MAAM,OAAOC,OAAO,QAC3D4K,YAAY,MACd,6BAHF,IAGS,6BACP,kBAAC,IAAD,CAAQvE,KAAK,SAAS5G,MAAO,CAAEuJ,MAAO,SAAWxI,QAAS,kBAvBlD,SAACwB,GACnB6H,GAAS,GACT,IAAMK,EAAazC,GAAS0C,UAAUpI,IAAI,SAAS+G,MAAM9G,GACnDoI,EAAW3C,GAASgB,WAAW1G,IAAI,SAAS+G,MAAM,SAASA,MAAM9G,GACvEkI,EAAWW,SAAShH,MAAK,WACvBuG,EAASrB,YAkB+D+B,CAAY9I,KAA5E,cAIJ,IACO,IAAV4H,GAAmBF,EAASzF,OAAS,EACpC,2BACEoC,KAAK,OACL0E,OAAO,kBACPC,UAAQ,EACR3C,SAAUyB,IAGV,2BAAOzD,KAAK,OAAO0E,OAAO,kBAAkB1C,SAAUyB,KCvEhE,IAAMrJ,GAAUO,EAAQ,IACxBH,GAAIJ,GAAQG,MACCI,EAAQ,IACdC,SACA,IAAMgK,GAAY,uCAAG,WAAOtK,GAAP,iBAAAS,EAAA,sEAElB2D,EAAS,IAAItE,GAAQC,OAAO,CAAEC,WAFZ,SAGHoE,EAAOnE,MACtBC,GAAEmE,IACAnE,GAAEoE,SAASpE,GAAEqE,UAAUrE,GAAEU,WAAW,cACpCV,GAAEsE,QAAO,SAAAC,GAAC,OAAIvE,GAAEwE,IAAID,QANJ,cAGlB3D,EAHkB,yBAUfA,EAAOD,MAVQ,yDAYf,CAAEE,WAAY,IAAKC,KAAM,KAAIM,aAZd,yDAAH,sDC8EViJ,GAvEE,WAAO,IAAD,EACKtF,mBAAS,IADd,mBACdC,EADc,KACNC,EADM,KAerB,OAbAC,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACE6J,GAAa,4CACVpH,MAAK,SAACrC,GACLsE,EAAQtE,MAETwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACL,IACJjD,QAAQC,IAAIgD,GAEV,yBAAKrG,UAAU,mBACb,6BACA,wCACA,kBAAC,IAAD,CAAQgB,QAASgH,GAAiBnB,KAAK,WAAvC,eACc,kBAACC,GAAA,EAAD,OAEd,6BACA,6BACA,6BACET,EAAO5B,OAKL,kBAAC,IAAD,CAAKsC,OAAQ,CAAC,GAAI,KACfV,EAAO9B,KAAI,SAACuE,EAAGjI,GACd,OACE,kBAAC,IAAD,CAAKmG,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC9B,kBAAC,IAAD,CACEhH,GAAE,oBAAe2I,EAAE9G,KAAK+F,SACxBL,OAAQ,CAAEhF,MAAOoG,EAAE9G,KAAK+F,UAExB,kBAAC,IAAD,CAAM/H,UAAU,OAAOa,IAAKA,GAC1B,wBAAIb,UAAU,aAAaC,MAAO,CAAEmH,UAAW,WAC5C0B,EAAE9G,KAAK+F,gBAdxB,gCACE,yBAAK3H,IAAKC,KAAME,MAAO,IAAKC,OAAQ,IAAKF,IAAI,MAsBjD,6BACA,6BACA,kBAAC,IAAD,CAAKyG,OAAQ,CAAC,GAAI,KAChB,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CAAMnH,UAAU,QACd,kBAACiK,GAAD,QAGJ,kBAAC,IAAD,CAAKjD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC/B,kBAAC,IAAD,CAAMnH,UAAU,QACd,gDACA,6BACA,kBAACyJ,GAAD,MACA,6BACA,kBAACd,GAAD,WC1EN1H,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMkK,GAAU,uCAAG,WAAOC,EAAYC,EAAaC,EAAaC,EAAeC,EAAiB7K,GAA7E,iBAAAS,EAAA,sEAGlBC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHjB,SAKDU,EAAYT,MAC/BC,GAAES,OACAT,GAAEU,WAAW,YACb,CACEC,KAAM,CACLiK,KAAMJ,EACNK,QAASN,EACTO,MAAOL,EACPnK,SAAUqK,EACVI,OAAQL,MAdO,cAKhB9J,EALgB,yBAoBf,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAtBvB,yDAyBf,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAzBd,yDAAH,gE,8CCFvB,sBA2Ce4J,EA3Cf,WAAAzK,EAAA,0FAAAA,EAAA,MA2CA,WAAwB0K,GAAxB,SAAA1K,EAAA,yDACqB,KAAf0K,EAAQ,IAA4B,KAAfA,EAAQ,IAA4B,KAAfA,EAAQ,IAA4B,KAAfA,EAAQ,GAD7E,gBAEI3J,IAAKC,KACH,GACA,sBACA,WALN,sCASU+I,GAAWW,EAAQ,GAAGA,EAAQ,GAAGA,EAAQ,GAAGA,EAAQ,GAAG1I,EAAM,4CATvE,4CA3CA,uBA2CeyI,EA3Cf,4CAAiCzI,EAAjC,EAAiCA,MAC3B2I,EAAe,CACnB,KAAQ,OACR,OAAU,SACV,MAAS,SAGX5J,IAAK6J,MAAM,CACT3J,MAAO,OACPuB,kBAAmB,cACnBpB,kBAAkB,EAClByJ,cAAe,CAAC,IAAK,IAAK,IAAK,OAC9BC,MAAM,CACP,CACI3I,MAAO,cACPC,KAAM,6BAEV,CACID,MAAO,OACPC,KAAM,sBAEV,CACID,MAAO,QACPC,KAAM,eACNnB,MAAO,SAEX,CACIkB,MAAO,SACPC,KAAM,wBACNnB,MAAO,QACP0J,aAAcA,KAEjBlI,MAAK,SAACpC,GACHA,EAAOiB,QACPE,QAAQC,IAAIpB,EAAOiB,MAAM,IACzBP,IAAKC,KAAK,CACNmB,MAAO,YACPK,kBAAmB,QAEvBiI,EAASpK,EAAOiB,WAvCtB,4C,sBAyDeyJ,O,6CC3DT1L,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMmL,GAAa,uCAAG,WAAOpK,EAAGoJ,EAAYC,EAAaC,EAAaC,EAAeC,EAAiB7K,GAAhF,iBAAAS,EAAA,sEAGrBC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHd,SAKJU,EAAYT,MAC/BC,GAAE2D,OAAO3D,GAAEoC,IAAIpC,GAAEU,WAAW,YAAYS,GACtC,CACER,KAAM,CACJiK,KAAMJ,EACNK,QAASN,EACTO,MAAOL,EACPnK,SAAUqK,EACVI,OAAQL,MAbS,cAKnB9J,EALmB,yBAmBlB,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OArBpB,yDAwBlB,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAxBX,yDAAH,kE,8CCF1B,WAA+BD,EAAGoB,EAAMqI,EAAKY,EAAOV,EAAMC,GAA1D,MA+CeC,EA/Cf,WAAAzK,EAAA,0FAAAA,EAAA,MA+CA,WAAwB0K,GAAxB,SAAA1K,EAAA,yDACEwB,QAAQC,IAAIiJ,GACO,KAAfA,EAAQ,IAA4B,KAAfA,EAAQ,IAA4B,KAAfA,EAAQ,IAA4B,KAAfA,EAAQ,GAF7E,gBAGI3J,IAAKC,KACH,GACA,sBACA,WANN,sCAUQgK,GAAcpK,EAAG8J,EAAQ,GAAGA,EAAQ,GAAGA,EAAQ,GAAGA,EAAQ,GAAG1I,EAAM,4CAV3E,4CA/CA,uBA+CeyI,EA/Cf,4CACME,EAAe,CACnB,KAAQ,OACR,OAAU,SACV,MAAS,SAGX5J,IAAK6J,MAAM,CACT3J,MAAO,OACPuB,kBAAmB,cACnBpB,kBAAkB,EAClByJ,cAAe,CAAC,IAAK,IAAK,IAAK,OAC9BC,MAAM,CACP,CACI3I,MAAO,cACPC,KAAM,4BACNmB,WAAY0H,GAEhB,CACI9I,MAAO,OACPC,KAAM,qBACNmB,WAAY8G,GAEhB,CACIlI,MAAO,QACPC,KAAM,eACNnB,MAAO,QACPsC,WAAYgH,GAEhB,CACIpI,MAAO,SACPC,KAAM,wBACNnB,MAAO,QACPsC,WAAYiH,EACZG,aAAcA,KAEjBlI,MAAK,SAACpC,GACHA,EAAOiB,QACPE,QAAQC,IAAIpB,EAAOiB,MAAM,IACzBP,IAAKC,KAAK,CACNmB,MAAO,YACPK,kBAAmB,QAEvBiI,EAASpK,EAAOiB,WA3CtB,4C,sBA8De4J,O,uDChET7L,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMsL,GAAa,uCAAG,WAAOvK,EAAIrB,GAAX,iBAAAS,EAAA,sEAGrBC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHd,SAKJU,EAAYT,MAC/BC,GAAEmC,OAAOnC,GAAEoC,IAAIpC,GAAEU,WAAW,YAAYS,KANjB,cAKnBP,EALmB,yBASlB,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAXpB,yDAclB,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAdX,yDAAH,wD,8CCF1B,WAA+BD,GAA/B,SAAAZ,EAAA,sDAEIe,IAAKC,KAAK,CACNmB,MAAO,gBACPC,KAAM,GACNC,KAAM,UACNjB,kBAAkB,EAClBkB,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpBC,MAAK,SAACpC,GACDA,EAAOqC,cACPyI,GAAcvK,EAAI,4CAClBG,IAAKC,KACD,WACA,4BACA,eAhBhB,4C,sBAsBeoK,O,2ECgGAC,GAvGE,WAAO,IAChBrJ,EAAUuC,cAAVvC,MADe,EAIKwC,mBAAS,IAJd,mBAIdC,EAJc,KAINC,EAJM,KAiBrB,OAZAC,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEkE,GAAY,4CACTzB,MAAK,SAACrC,GACLsE,EAAQtE,MAETwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACL,IAEF,6BACE,wCACA,kBAAC,IAAD,CACErF,QAAS,WACP2L,GAAgB,CAAE/I,WAEpBiD,KAAK,WAJP,eAMc,kBAACqG,GAAA,EAAD,OAGd,6BACA,6BACE7G,EAAO5B,OAKP,6BACG4B,EAAO9B,KAAI,SAACC,EAAQ3D,GACnB,OAAI2D,EAAOxC,KAAKL,WAAaiC,EAEzB,kBAAC,KAAD,CAAMuJ,UAAQ,EAACC,WAAW,cACxB,kBAAC,KAAKxM,KAAN,KACE,kBAAC,KAAKA,KAAKoF,KAAX,CACEqH,OAAQ,kBAAC,KAAD,CAAQpJ,KAAM,kBAACqJ,GAAA,EAAD,QACtBvJ,MAAOS,EAAOxC,KAAKiK,KACnBsB,YAAa/I,EAAOxC,KAAKkK,UAG3B,0BAAMjM,MAAO,CAAEuJ,MAAO,UACpB,kBAAC,IAAD,CAASzF,MAAM,QACb,kBAAC,IAAD,CACE8C,KAAK,UACL7F,QAAS,WACP8L,GACEtI,EAAOjC,IAAIW,MAAMV,GACjBgC,EAAOxC,KAAKL,SACZ6C,EAAOxC,KAAKiK,KACZzH,EAAOxC,KAAKkK,QACZ1H,EAAOxC,KAAKmK,MACZ3H,EAAOxC,KAAKoK,UAIhB,kBAAC3E,EAAA,EAAD,QAfN,OAmBE,kBAAC,IAAD,CAAS1D,MAAM,UACb,kBAAC,IAAD,CACE8C,KAAK,UACL2G,QAAM,EACNxM,QAAS,WACPgM,GAAgBxI,EAAOjC,IAAIW,MAAMV,MAGnC,kBAACgF,EAAA,EAAD,QAGJ,kBAAC,IAAD,CACErH,GAAE,oBAAeyD,EAAf,uBAAmCA,EAAnC,YAA4CY,EAAOxC,KAAKkK,SAC1DxE,OAAQ,CAAE9D,MAAOA,EAAOiJ,OAAQrI,EAAOxC,KAAKkK,UAE5C,kBAAC,IAAD,CAASnI,MAAM,eACb,kBAAC,IAAD,CACE8C,KAAK,UACL5G,MAAO,CAAEM,MAAO,MAAOkN,UAAW,QAFpC,qBAYL,kCA/Db,gCACE,yBAAKrN,IAAKwH,KAASrH,MAAO,IAAKC,OAAQ,IAAKF,IAAI,QClDpDW,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMiM,GAAU,uCAAG,WAAOC,EAAQC,EAAczM,GAA7B,iBAAAS,EAAA,sEAGlBC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHjB,SAKDU,EAAYT,MAC/BC,GAAES,OACAT,GAAEU,WAAW,YACb,CAAEC,KAAM,CAAE+B,MAAO4J,EAASC,aAAcA,MARtB,cAKhB3L,EALgB,yBAYf,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAdvB,yDAiBf,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAjBd,yDAAH,0D,8CCDvB,WAA+BmB,GAA/B,IA2BiByI,EA3BjB,WAAAzK,EAAA,0FAAAA,EAAA,MA2BE,WAAwB0K,GAAxB,SAAA1K,EAAA,6DACEwB,QAAQC,IAAIiJ,GADd,SAEQoB,GAAW,GAAD,OAAI9J,EAAJ,YAAa0I,EAAQ,IAAKA,EAAQ,GAAG,4CAFvD,4CA3BF,uBA2BiBD,EA3BjB,4CACE1J,IAAK6J,MAAM,CACT3J,MAAO,OACPuB,kBAAmB,cACnBpB,kBAAkB,EAClByJ,cAAe,CAAC,IAAK,OACpBC,MAAM,CACP,CACE3I,MAAO,gBACPC,KAAM,uBAER,CACED,MAAO,uBACPC,KAAM,6BACNnB,MAAO,YAGRwB,MAAK,SAACpC,GACHA,EAAOiB,QACTE,QAAQC,IAAIpB,EAAOiB,MAAM,IACzBP,IAAKC,KAAK,CACRmB,MAAO,YACPK,kBAAmB,QAErBiI,EAASpK,EAAOiB,WAxBtB,4C,sBAgCe2K,O,2FCjCf,WAAgCrL,GAAhC,SAAAZ,EAAA,6DACIwB,QAAQC,IAAIb,GADhB,SAEUe,EAAef,EAAG,4CAF5B,4C,sBAIeqC,O,kECIPmB,GAASC,IAATD,KAoFO8H,GAlFE,WAAO,IAChBlK,EAAUuC,cAAVvC,MADe,EAIKwC,mBAAS,IAJd,mBAIdC,EAJc,KAINC,EAJM,KAkBrB,OAbAC,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACImE,GAAa,4CACZ1B,MAAK,SAACrC,GACHsE,EAAQtE,MAEXwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACL,IAGF,6BACE,2CAAiBzC,GACjB,kBAAC,IAAD,CACEiD,KAAK,UACL7F,QAAS,WACP6M,GAAgBjK,KAHpB,eAMc,kBAACkD,GAAA,EAAD,OAEd,6BACA,6BACET,EAAO5B,OAMT,kBAAC,IAAD,CAAKsC,OAAQ,CAAC,GAAI,KACfV,EAAO9B,KAAI,SAACG,EAAI7D,GACf,IACI8D,EADUD,EAAG1C,KAAK+B,MACJa,MAAM,KAExB,OADAxB,QAAQC,IAAIsB,EAAI,IACZA,EAAI,KAAOf,EAEX,kBAAC,IAAD,CAAKoD,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC/B,kBAAC,IAAD,CACEnH,UAAU,OACV+N,WAAS,EACTzG,MACE,yBAAKhH,IAAI,UAAUF,IAAKC,KAAMG,OAAO,QAAQD,MAAM,SAErDgH,QAAS,CACP,kBAAC,IAAD,CAASxD,MAAM,UAEb,kBAACyD,EAAA,EAAD,CACE3G,IAAI,SACJG,QAAS,WACPgN,GAAgBtJ,EAAGnC,IAAIW,MAAMV,OALnC,iBAYF,6BACA,kBAAC,GAAD,CACEuB,MAAOY,EAAI,GACX4I,YAAW,UAAK7I,EAAG1C,KAAK4L,aAAb,qBAOd,kCA1CT,gCACE,yBAAKxN,IAAKwH,KAASrH,MAAO,IAAKC,OAAQ,IAAKF,IAAI,Q,UCiB3C2N,GAvDC,WAAO,IACfrK,EAAUuC,cAAVvC,MADc,EAGMwC,mBAAS,IAHf,mBAGbC,EAHa,KAGLC,EAHK,KAgBpB,OAZAC,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEmE,GAAa,4CACV1B,MAAK,SAACrC,GACLsE,EAAQtE,MAETwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACL,IAEF,6BACE,8CAAoBzC,GACpB,6BACEyC,EAAO5B,OAKP,6BACG4B,EAAO9B,KAAI,SAACG,EAAI7D,GACf,IACI8D,EADUD,EAAG1C,KAAK+B,MACJa,MAAM,KAExB,OADAxB,QAAQC,IAAIsB,EAAI,IACZA,EAAI,KAAOf,EAEX,kBAAC,KAAD,CAAMuJ,UAAQ,GACZ,kBAAC,IAAD,CACEhN,GAAE,oBAAeyD,EAAf,oBAAgCA,EAAhC,YAAyCe,EAAI,IAC/C+C,OAAQ,CAAE9D,MAAOA,EAAOsK,KAAMvJ,EAAI,KAElC,kBAAC,KAAK/D,KAAN,KACE,kBAAC,KAAKA,KAAKoF,KAAX,CACEqH,OAAQ,kBAACc,GAAA,EAAD,MACRpK,MAAOY,EAAI,QAOhB,kCA1BX,gCACE,yBAAKvE,IAAKwH,KAASrH,MAAO,IAAKC,OAAQ,IAAKF,IAAI,QC7BpDW,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAM2M,GAAS,uCAAG,WAAOxK,EAAOiJ,EAAQqB,EAAKN,EAAaS,EAAIC,EAAMC,EAAUC,EAAMC,EAAYtN,GAA9E,iBAAAS,EAAA,sEAGjBC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHlB,SAKAU,EAAYT,MAC/BC,GAAES,OACAT,GAAEU,WAAW,WACb,CACEC,KAAM,CACJL,SAAUiC,EACViJ,OAAQA,EACRc,QAASO,EACTN,aAAcA,EACdS,IAAKA,EACLC,MAAOA,EACPC,UAAWA,EACXC,MAAOA,EACPC,WAAYA,MAlBC,cAKfxM,EALe,yBAwBd,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OA1BxB,yDA6Bd,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aA7Bf,yDAAH,wE,8CCFtB,WAAqCmB,EAAMiJ,EAAOqB,EAAKN,EAAaS,EAAIC,EAAMC,EAAUC,EAAMC,GAA9F,SAAA7M,EAAA,sDACIwB,QAAQC,IAAIO,EAAMiJ,EAAOqB,EAAKG,EAAIC,EAAMC,EAAUC,GAEhDJ,GAAUxK,EAAMiJ,EAAOqB,EAAKN,EAAaS,EAAIC,EAAMC,EAAUC,EAAMC,EAAW,4CAC9E9L,IAAKC,KACH,SACA,iCACA,WAPR,4C,sBAUiB8L,O,qECuIFC,I,MAzIU,WAAO,IACtB/K,EAAUuC,cAAVvC,MACAsK,EAAS/H,cAAT+H,KACN9K,QAAQC,IAAI6K,EAAMtK,GAHS,MAILwC,qBAJK,mBAIpBiI,EAJoB,KAIfO,EAJe,OAKDxI,qBALC,mBAKpBkI,EALoB,KAKbO,EALa,OAMOzI,qBANP,mBAMpBmI,EANoB,KAMTO,EANS,OASW1I,mBAAS,IATpB,mBASpBvC,EAToB,KASP8C,EATO,KAU3BJ,qBAAU,WAAM,4CACZ,sBAAA3E,EAAA,sDACIkE,GAAY,4CACPzB,MAAK,SAACrC,GACH2E,EAAe3E,MAElBwE,OAAM,SAACC,GACJrD,QAAQC,IAAIoD,MANxB,4CADY,uBAAC,WAAD,wBAUZC,KACD,CAAC7C,IArBuB,MAuBKuC,mBAAS,IAvBd,mBAuBpB0H,EAvBoB,KAuBViB,EAvBU,KAoF3B,OA5DAxI,qBAAU,WAAM,4CACZ,sBAAA3E,EAAA,sDACImE,GAAa,4CACR1B,MAAK,SAACrC,GACH+M,EAAY/M,MAEfwE,OAAM,SAACC,GACJrD,QAAQC,IAAIoD,MANxB,4CADY,uBAAC,WAAD,wBAUZC,KACD,CAACoH,IAkDA,6BAAK,6BACD,kBAAC,SAAD,CAAOkB,OAAO,KACV,kBAAC,SAAD,KACI,kBAAC,MAAD,KACI,kBAAC,MAAD,gBACA,kBAAC,MAAD,aACA,kBAAC,MAAD,gBACF,kBAAC,MAAD,YACA,kBAAC,MAAD,cACA,kBAAC,MAAD,kBACE,kBAAC,MAAD,qBAGR,kBAAC,SAAD,KACKlB,EAASvJ,KAAI,SAAC0K,EAAapO,GAGxB,OAFcoO,EAAYjN,KAAK+B,MACba,MAAM,KAChB,KAAOsJ,GACX9K,QAAQC,IAAI4L,EAAYjN,KAAK4L,cAEzB,oCACK/J,EAAYU,KAAI,SAACC,EAAQ3D,GAEtB,OAAI2D,EAAOxC,KAAKL,WAAaiC,GACzBR,QAAQC,IAAIxC,GAER,kBAAC,MAAD,KACI,kBAAC,MAAD,KAAK2D,EAAOxC,KAAKkK,SACjB,kBAAC,MAAD,KAAK1H,EAAOxC,KAAKiK,MACjB,kBAAC,MAAD,KAAKiC,GACL,kBAAC,MAAD,CAAIjO,MAAO,CAAEM,MAAO,OAAQ,2BAAOsG,KAAK,SAAS5G,MAAO,CAAEM,MAAO,SAAW2O,YAAY,kBAAkBrG,SAAU,SAACsG,GAAD,OAAWP,EAAOO,EAAMpG,OAAO7F,WACnJ,kBAAC,MAAD,CAAIjD,MAAO,CAAEM,MAAO,OAApB,IAA4B,2BAAOsG,KAAK,SAAS5G,MAAO,CAAEM,MAAO,SAAW2O,YAAY,oBAAoBrG,SAAU,SAACsG,GAAD,OAAWN,EAASM,EAAMpG,OAAO7F,UAAvJ,MACA,kBAAC,MAAD,CAAIjD,MAAO,CAAEM,MAAO,OAApB,IAA6B,2BAAOsG,KAAK,SAAS5G,MAAO,CAAEM,MAAO,SAAW2O,YAAY,wBAAwBrG,SAAU,SAACsG,GAAD,OAAWL,EAAaK,EAAMpG,OAAO7F,UAAhK,MACA,4BAAI,gCAAQ,kBAAC,IAAD,CAAQlC,QAAS,YA/E7E,SAAiB4C,EAAOiJ,EAAQqB,EAAMG,EAAKC,EAAOC,EAAWX,GACzD,IAAIY,EAAQY,SAASf,GAAOe,SAASd,GAASc,SAASb,GACvD,GAAIC,GAAS,GAAI,CAEbE,GAAsB9K,EAAOiJ,EAAQqB,EAAMN,EAAcS,EAAKC,EAAOC,EAAWC,EAD/D,QAGhB,GAAIA,GAAS,IAAMA,GAAS,GAAI,CAEjCE,GAAsB9K,EAAOiJ,EAAQqB,EAAMN,EAAcS,EAAKC,EAAOC,EAAWC,EAD/D,UAGhB,GAAIA,GAAS,IAAMA,GAAS,GAAI,CAEjCE,GAAsB9K,EAAOiJ,EAAQqB,EAAMN,EAAcS,EAAKC,EAAOC,EAAWC,EAD/D,UAGhB,GAAIA,GAAS,IAAMA,GAAS,GAAI,CAEjCE,GAAsB9K,EAAOiJ,EAAQqB,EAAMN,EAAcS,EAAKC,EAAOC,EAAWC,EAD/D,QAGhB,GAAIA,GAAS,IAAMA,GAAS,GAAI,CAEjCE,GAAsB9K,EAAOiJ,EAAQqB,EAAMN,EAAcS,EAAKC,EAAOC,EAAWC,EAD/D,UAGhB,GAAIA,GAAS,IAAMA,GAAS,GAAI,CAEjCE,GAAsB9K,EAAOiJ,EAAQqB,EAAMN,EAAcS,EAAKC,EAAOC,EAAWC,EAD/D,UAGhB,GAAIA,GAAS,IAAMA,GAAS,GAAI,CAEjCE,GAAsB9K,EAAOiJ,EAAQqB,EAAMN,EAAcS,EAAKC,EAAOC,EAAWC,EAD/D,QAGhB,GAAIA,GAAS,IAAMA,GAAS,GAAI,CAEjCE,GAAsB9K,EAAOiJ,EAAQqB,EAAMN,EAAcS,EAAKC,EAAOC,EAAWC,EAD/D,UAGhB,GAAIA,GAAS,IAAMA,GAAS,GAAI,CAEjCE,GAAsB9K,EAAOiJ,EAAQqB,EAAMN,EAAcS,EAAKC,EAAOC,EAAWC,EAD/D,QAGhB,GAAIA,EAAQ,GAAI,CAEjBE,GAAsB9K,EAAOiJ,EAAQqB,EAAMN,EAAcS,EAAKC,EAAOC,EAAWC,EAD/D,IAwC4Da,CAAQzL,EAAOY,EAAOxC,KAAKkK,QAASgC,EAAMG,EAAKC,EAAOC,EAAWU,EAAYjN,KAAK4L,gBAA3G,cAIhB,mCAKhB,sCCzI1B3M,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAM6N,GAAY,uCAAG,WAAO9M,EAAI+M,EAAKC,EAAMC,EAAWjB,EAAMC,EAAYtN,GAAnD,iBAAAS,EAAA,sEAGpBC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHf,SAKHU,EAAYT,MAC/BC,GAAE2D,OAAO3D,GAAEoC,IAAIpC,GAAEU,WAAW,WAAYS,GACtC,CACER,KAAM,CACJqM,IAAKkB,EACLjB,MAAOkB,EACPjB,UAAWkB,EACXjB,MAAOA,EACPC,WAAYA,MAbI,cAKlBxM,EALkB,yBAmBjB,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OArBrB,yDAwBjB,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAxBZ,yDAAH,kE,8CCFzB,WAA8BD,EAAI6L,EAAKC,EAAOC,GAA9C,IAoCiBlC,EApCjB,WAAAzK,EAAA,0FAAAA,EAAA,MAoCE,WAAwB0K,GAAxB,eAAA1K,EAAA,yDACEwB,QAAQC,IAAIiJ,MACRkC,EAAQY,SAAS9C,EAAQ,IAAM8C,SAAS9C,EAAQ,IAAM8C,SAAS9C,EAAQ,MAC9D,IAHf,uBAIqB,EAJrB,SAKUgD,GAAa9M,EAAI8J,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIkC,EAD1C,EAC6D,4CALlF,mCAOWA,GAAS,IAAMA,GAAS,IAPnC,wBAQqB,IARrB,UASUc,GAAa9M,EAAI8J,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIkC,EAD1C,IAC6D,4CATlF,qCAWWA,GAAS,IAAMA,GAAS,IAXnC,wBAYqB,IAZrB,UAaUc,GAAa9M,EAAI8J,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIkC,EAD1C,IAC6D,4CAblF,qCAeWA,GAAS,IAAMA,GAAS,IAfnC,wBAgBqB,EAhBrB,UAiBUc,GAAa9M,EAAI8J,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIkC,EAD1C,EAC6D,4CAjBlF,qCAmBWA,GAAS,IAAMA,GAAS,IAnBnC,wBAoBqB,IApBrB,UAqBUc,GAAa9M,EAAI8J,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIkC,EAD1C,IAC6D,4CArBlF,qCAuBWA,GAAS,IAAMA,GAAS,IAvBnC,wBAwBqB,IAxBrB,UAyBUc,GAAa9M,EAAI8J,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIkC,EAD1C,IAC6D,4CAzBlF,qCA2BWA,GAAS,IAAMA,GAAS,IA3BnC,wBA4BqB,EA5BrB,UA6BUc,GAAa9M,EAAI8J,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIkC,EAD1C,EAC6D,4CA7BlF,qCA+BWA,GAAS,IAAMA,GAAS,IA/BnC,wBAgCqB,IAhCrB,UAiCUc,GAAa9M,EAAI8J,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIkC,EAD1C,IAC6D,4CAjClF,qCAmCWA,GAAS,IAAMA,GAAS,IAnCnC,wBAoCqB,EApCrB,UAqCUc,GAAa9M,EAAI8J,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIkC,EAD1C,EAC6D,4CArClF,qCAuCWA,EAAQ,IAvCnB,wBAwCqB,EAxCrB,UAyCUc,GAAa9M,EAAI8J,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,GAAIkC,EAD1C,EAC6D,4CAzClF,6CApCF,uBAoCiBnC,EApCjB,4CACE1J,IAAK6J,MAAM,CACT3J,MAAO,OACPuB,kBAAmB,cACnBpB,kBAAkB,EAClByJ,cAAe,CAAC,IAAK,IAAK,OACzBC,MAAM,CACP,CACE3I,MAAO,YACPC,KAAM,sBACNnB,MAAO,SACPsC,WAAYkJ,GAEd,CACEtK,MAAO,cACPC,KAAM,sBACNnB,MAAO,SACPsC,WAAYmJ,GAEd,CACEvK,MAAO,kBACPC,KAAM,uBACNnB,MAAO,SACPsC,WAAYoJ,KAEblK,MAAK,SAACpC,GACHA,EAAOiB,QACTE,QAAQC,IAAIpB,EAAOiB,MAAM,IACzBP,IAAKC,KAAK,CACRmB,MAAO,YACPK,kBAAmB,QAErBiI,EAASpK,EAAOiB,WAhCtB,4C,sBAkFewM,O,mDCpFTzO,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMkO,GAAY,uCAAG,WAAOnN,EAAIrB,GAAX,iBAAAS,EAAA,sEAGpBC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHf,SAKHU,EAAYT,MAC/BC,GAAEmC,OAAOnC,GAAEoC,IAAIpC,GAAEU,WAAW,WAAWS,KANjB,cAKlBP,EALkB,yBASjB,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAXrB,yDAcjB,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAdZ,yDAAH,wD,8CCFzB,WAA8BD,GAA9B,SAAAZ,EAAA,6DACIwB,QAAQC,IAAIb,GADhB,SAEUmN,GAAcnN,EAAG,4CAF3B,4C,sBAIeoN,O,6CCNT3O,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMoO,GAAU,uCAAG,WAAO1O,GAAP,iBAAAS,EAAA,sEAElB2D,EAAS,IAAItE,GAAQC,OAAO,CAAEC,WAFZ,SAGHoE,EAAOnE,MACxBC,GAAEmE,IACAnE,GAAEoE,SAASpE,GAAEqE,UAAUrE,GAAEU,WAAW,aACpCV,GAAEsE,QAAO,SAAAC,GAAC,OAAIvE,GAAEwE,IAAID,QANF,cAGlB3D,EAHkB,yBAUfA,EAAOD,MAVQ,yDAYf,CAAEE,WAAY,IAAKC,KAAM,KAAIM,aAZd,yDAAH,sDCyORqN,GAlOO,WAAO,IACrBlM,EAAUuC,cAAVvC,MACAiJ,EAAW1G,cAAX0G,OACFkD,EAAM,EACNC,EAAqB,EAJC,EAMA5J,mBAAS,IANT,mBAMnBC,EANmB,KAMXC,EANW,KAO1BC,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEiO,GAAW,4CACRxL,MAAK,SAACrC,GACLsE,EAAQtE,MAETwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACL,IAIFA,EAAO9B,KAAI,SAAC0L,EAAQpP,GAClB,IAAIqP,EAAUtM,EAAMgB,MAAM,KAC1BxB,QAAQC,IAAI6M,EAAQ,GAAK,GACzB,IAAIhL,EAAQgL,EAAQ,GAAK,EASzB,OARAA,EAAO,UAAMA,EAAQ,GAAd,YAAoBA,EAAQ,GAA5B,YAAkChL,GACzC9B,QAAQC,IAAI6M,GAERrD,IAAWoD,EAAOjO,KAAK6K,QAAUqD,IAAYD,EAAOjO,KAAKL,WAC3DoO,GAAYE,EAAOjO,KAAKyM,WAAawB,EAAOjO,KAAK4L,aACjDoC,GACuBZ,SAASa,EAAOjO,KAAK4L,eAEvC,iCAGXxK,QAAQC,IAAI0M,EAAKC,GACjB,IAAIG,EAAYJ,EAAMC,EAItB,OAHA5M,QAAQC,IAAI8M,EAAUC,QAAQ,IAI5B,6BACE,kBAAC,IAAD,CAAKrJ,OAAQ,CAAC,GAAI,KAGhB,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CAAMnH,UAAU,QACd,gCACG,IACD,+CAAyB,KAE3B,kBAAC,SAAD,CAAOgP,OAAO,KACZ,kBAAC,SAAD,KACE,kBAAC,MAAD,KACE,kBAAC,MAAD,iBACA,kBAAC,MAAD,gBACA,kBAAC,MAAD,qBACA,kBAAC,MAAD,YACA,kBAAC,MAAD,cACA,kBAAC,MAAD,kBACA,kBAAC,MAAD,cACA,kBAAC,MAAD,oBACA,kBAAC,MAAD,kBAGJ,kBAAC,SAAD,KACG3I,EAAO9B,KAAI,SAAC0L,EAAQpP,GACnB,OACEgM,IAAWoD,EAAOjO,KAAK6K,QACvBjJ,IAAUqM,EAAOjO,KAAKL,SAIpB,kBAAC,MAAD,KACE,kBAAC,MAAD,KAAKsO,EAAOjO,KAAKL,UACjB,kBAAC,MAAD,KAAKsO,EAAOjO,KAAK2L,SACjB,kBAAC,MAAD,KAAKsC,EAAOjO,KAAK4L,cACjB,kBAAC,MAAD,KAAKqC,EAAOjO,KAAKqM,KACjB,kBAAC,MAAD,KAAK4B,EAAOjO,KAAKsM,OACjB,kBAAC,MAAD,KAAK2B,EAAOjO,KAAKuM,WACjB,kBAAC,MAAD,KAAK0B,EAAOjO,KAAKwM,OACjB,kBAAC,MAAD,KAAKyB,EAAOjO,KAAKyM,YACjB,kBAAC,MAAD,KACE,kBAAC,IAAD,CAAS1K,MAAM,QACb,kBAAC,IAAD,CACE/C,QAAS,WACP0O,GACEO,EAAO1N,IAAIW,MAAMV,GACjByN,EAAOjO,KAAKqM,IACZ4B,EAAOjO,KAAKsM,MACZ2B,EAAOjO,KAAKuM,aAIhB,kBAAC9G,EAAA,EAAD,QAGJ,kBAAC,IAAD,CAAS1D,MAAM,UACb,kBAAC,IAAD,CACE/C,QAAS,WACP4O,GAAeK,EAAO1N,IAAIW,MAAMV,MAGlC,kBAACgF,EAAA,EAAD,UAOL,sCAQnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKR,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CAAMnH,UAAU,QACd,gCACG,IACD,oDAA8B,KAEhC,kBAAC,SAAD,CAAOgP,OAAO,KACZ,kBAAC,SAAD,KACE,kBAAC,MAAD,KACE,kBAAC,MAAD,iBACA,kBAAC,MAAD,gBACA,kBAAC,MAAD,qBACA,kBAAC,MAAD,YACA,kBAAC,MAAD,cACA,kBAAC,MAAD,kBACA,kBAAC,MAAD,cACA,kBAAC,MAAD,oBACA,kBAAC,MAAD,kBAGJ,kBAAC,SAAD,KACG3I,EAAO9B,KAAI,SAAC0L,EAAQpP,GACnB,IAAIqP,EAAUtM,EAAMgB,MAAM,KACtBM,EAAQgL,EAAQ,GAAK,EAKzB,OAJAA,EAAO,UAAMA,EAAQ,GAAd,YAAoBA,EAAQ,GAA5B,YAAkChL,GAKvC2H,IAAWoD,EAAOjO,KAAK6K,QACvBqD,IAAYD,EAAOjO,KAAKL,UAExByB,QAAQC,IACN4M,EAAOjO,KAAKyM,WAAawB,EAAOjO,KAAK4L,cAGrC,kBAAC,MAAD,KACE,kBAAC,MAAD,KAAKqC,EAAOjO,KAAKL,UACjB,kBAAC,MAAD,KAAKsO,EAAOjO,KAAK2L,SACjB,kBAAC,MAAD,KAAKsC,EAAOjO,KAAK4L,cACjB,kBAAC,MAAD,KAAKqC,EAAOjO,KAAKqM,KACjB,kBAAC,MAAD,KAAK4B,EAAOjO,KAAKsM,OACjB,kBAAC,MAAD,KAAK2B,EAAOjO,KAAKuM,WACjB,kBAAC,MAAD,KAAK0B,EAAOjO,KAAKwM,OACjB,kBAAC,MAAD,KAAKyB,EAAOjO,KAAKyM,YACjB,kBAAC,MAAD,KACE,kBAAC,IAAD,CAAS1K,MAAM,QACb,kBAAC,IAAD,CACE/C,QAAS,WACP0O,GACEO,EAAO1N,IAAIW,MAAMV,GACjByN,EAAOjO,KAAKqM,IACZ4B,EAAOjO,KAAKsM,MACZ2B,EAAOjO,KAAKuM,aAIhB,kBAAC9G,EAAA,EAAD,QAGJ,kBAAC,IAAD,CAAS1D,MAAM,UACb,kBAAC,IAAD,CACE/C,QAAS,WACP4O,GAAeK,EAAO1N,IAAIW,MAAMV,MAGlC,kBAACgF,EAAA,EAAD,WAOL,mCAIb,6BACA,gCACE,oCAAU2I,EAAUC,QAAQ,KAG9B,gCACE,kBAAC,IAAD,CAAKpJ,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC/B,kBAAC,IAAD,CACEhH,GAAE,oBAAeyD,EAAf,uBAAmCA,EAAnC,YAA4CiJ,EAA5C,qBAEF,kBAAC,IAAD,CAAM7M,UAAU,QACd,gCACG,IACD,yDAAmC,WAQjD,6BACA,gC,8BC9HOqQ,GA1FW,WAAO,IACzBxD,EAAW1G,cAAX0G,OACAjJ,EAAUuC,cAAVvC,MACFmM,EAAM,EACNC,EAAqB,EAJK,EAMJ5J,mBAAS,IANL,mBAMvBC,EANuB,KAMfC,EANe,KAO9BC,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEiO,GAAW,4CACRxL,MAAK,SAACrC,GACLsE,EAAQtE,MAETwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACL,IAGFA,EAAO9B,KAAI,SAAC0L,EAAQpP,GAKlB,OAJIgM,IAAWoD,EAAOjO,KAAK6K,QAAUjJ,IAAUqM,EAAOjO,KAAKL,WACzDoO,GAAYE,EAAOjO,KAAKyM,WAAawB,EAAOjO,KAAK4L,aACjDoC,GAA0CZ,SAASa,EAAOjO,KAAK4L,eAEzD,iCAGZxK,QAAQC,IAAI0M,EAAKC,GACjB,IAAIM,EAAaP,EAAMC,EAIvB,OAHA5M,QAAQC,IAAIiN,EAAWF,QAAQ,IAI7B,6BACE,kBAAC,IAAD,CAAKrJ,OAAQ,CAAC,GAAI,KAEhB,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CAAMnH,UAAU,QACd,oCAAS,oDAAT,KACA,kBAAC,SAAD,CAAOgP,OAAO,KACZ,kBAAC,SAAD,KACE,kBAAC,MAAD,KACE,kBAAC,MAAD,iBACA,kBAAC,MAAD,gBACA,kBAAC,MAAD,qBACA,kBAAC,MAAD,YACA,kBAAC,MAAD,cACA,kBAAC,MAAD,kBACA,kBAAC,MAAD,cACA,kBAAC,MAAD,oBACA,kBAAC,MAAD,kBAGJ,kBAAC,SAAD,KACG3I,EAAO9B,KAAI,SAAC0L,EAAQpP,GACnB,OAAIgM,IAAWoD,EAAOjO,KAAK6K,QAAUjJ,IAAUqM,EAAOjO,KAAKL,SAEvD,kBAAC,MAAD,KACE,kBAAC,MAAD,KAAKsO,EAAOjO,KAAKL,UACjB,kBAAC,MAAD,KAAKsO,EAAOjO,KAAK2L,SACjB,kBAAC,MAAD,KAAKsC,EAAOjO,KAAK4L,cACjB,kBAAC,MAAD,KAAKqC,EAAOjO,KAAKqM,KACjB,kBAAC,MAAD,KAAK4B,EAAOjO,KAAKsM,OACjB,kBAAC,MAAD,KAAK2B,EAAOjO,KAAKuM,WACjB,kBAAC,MAAD,KAAK0B,EAAOjO,KAAKwM,OACjB,kBAAC,MAAD,KAAKyB,EAAOjO,KAAKyM,YACjB,kBAAC,MAAD,KACE,kBAAC,IAAD,CAAS1K,MAAM,QAAO,kBAAC,IAAD,CAAQ/C,QAAS,WAAQ0O,GAAeO,EAAO1N,IAAIW,MAAMV,GAAIyN,EAAOjO,KAAKqM,IAAK4B,EAAOjO,KAAKsM,MAAO2B,EAAOjO,KAAKuM,aAAc,kBAAC9G,EAAA,EAAD,QACjJ,kBAAC,IAAD,CAAS1D,MAAM,UAAS,kBAAC,IAAD,CAAQ/C,QAAS,WAAQ4O,GAAeK,EAAO1N,IAAIW,MAAMV,MAAO,kBAACgF,EAAA,EAAD,UAKxF,mCAId,6BACA,gCACE,qCAAW8I,EAAWF,QAAQ,UC/EtCG,I,OAAO,WAAO,IACZ3M,EAAUuC,cAAVvC,MAEN,OACE,kBAAC,IAAD,CACEjD,oBAAqB,CAAC,KACtBV,MAAO,CAAEuQ,gBAAiB,UAAWpJ,UAAW,UAChD1G,KAAK,cAEL,kBAAC,IAAKE,KAAN,CAAWC,IAAI,IAAIoD,KAAM,kBAACwM,GAAA,EAAD,MAAkBzQ,UAAU,QACnD,kBAAC,IAAD,CAAMG,GAAE,oBAAeyD,GAAS5D,UAAU,aAA1C,aAIF,kBAAC,IAAKY,KAAN,CAAWC,IAAI,IAAIoD,KAAM,kBAACyM,GAAA,EAAD,MAAqB1Q,UAAU,QACtD,kBAAC,IAAD,CAAMG,GAAE,oBAAeyD,EAAf,qBAAiCA,GAAS5D,UAAU,aAA5D,aAIF,kBAAC,IAAKY,KAAN,CAAWC,IAAI,IAAIoD,KAAM,kBAAC0M,GAAA,EAAD,MAAsB3Q,UAAU,QACvD,kBAAC,IAAD,CAAMG,GAAE,oBAAeyD,EAAf,oBAAgCA,GAAS5D,UAAU,aAA3D,mBAqDO4Q,GA7CG,WAChB,OACE,6BACE,6BACA,kBAAC,GAAD,MACA,yBAAK5Q,UAAU,mBACb,6BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiM,KAAK,WAAW4E,KAAK,IAAIC,QAAS,kBAAC,GAAD,MAAcC,OAAK,IAC5D,kBAAC,IAAD,CACE9E,KAAK,WACL4E,KAAK,kBACLC,QAAS,kBAAC,GAAD,MACTC,OAAK,IAEP,kBAAC,IAAD,CACE9E,KAAK,UACL4E,KAAK,iBACLC,QAAS,kBAAC,GAAD,MACTC,OAAK,IAEP,kBAAC,IAAD,CACE9E,KAAK,mBACL4E,KAAK,uBACLC,QAAS,kBAAC,GAAD,MACTC,OAAK,IAEP,kBAAC,IAAD,CACE9E,KAAK,gBACL4E,KAAK,4BACLC,QAAS,kBAAC,GAAD,MACTC,OAAK,IAEN,kBAAC,IAAD,CACC9E,KAAK,kBACL4E,KAAK,4CACLC,QAAS,kBAAC,GAAD,MACTC,OAAK,QClFX9P,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMuP,GAAe,uCAAG,WAAOxO,EAAIrB,GAAX,iBAAAS,EAAA,sEAGvBC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHZ,SAKNU,EAAYT,MAC/BC,GAAEmC,OAAOnC,GAAEoC,IAAIpC,GAAEU,WAAW,cAAcS,KANjB,cAKrBP,EALqB,yBASpB,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAXlB,yDAcpB,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAdT,yDAAH,wD,8CCH5B,WAAiCD,GAAjC,SAAAZ,EAAA,sEACUoP,GAAgBxO,EAAG,4CAD7B,4C,sBAGeyO,O,6CCJThQ,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAMyP,GAAc,uCAAG,WAAO/P,GAAP,iBAAAS,EAAA,sEAEtB2D,EAAS,IAAItE,GAAQC,OAAO,CAAEC,WAFR,SAGPoE,EAAOnE,MACxBC,GAAEmE,IACAnE,GAAEoE,SAASpE,GAAEqE,UAAUrE,GAAEU,WAAW,gBACpCV,GAAEsE,QAAO,SAAAC,GAAC,OAAIvE,GAAEwE,IAAID,QANE,cAGtB3D,EAHsB,yBAUnBA,EAAOD,MAVY,yDAYnB,CAAEE,WAAY,IAAKC,KAAM,KAAIM,aAZV,yDAAH,sDC6CZ0O,GA3CM,WAAM,MAEa/K,mBAAS,IAFtB,mBAEhBgL,EAFgB,KAEJC,EAFI,KAgBvB,OAbA9K,qBAAU,WAAM,4CACZ,sBAAA3E,EAAA,sDACIsP,GAAe,4CACd7M,MAAK,SAACrC,GACHqP,EAAcrP,MAEjBwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADY,uBAAC,WAAD,wBAUZC,KACC,CAAC0K,IAGF,6BACI,yBAAKpR,UAAU,mBACX,6BAAM,6BACN,gCAAQ,qDACR,6BACA,kBAAC,IAAD,CAAK+G,OAAQ,CAAC,GAAI,KACd,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC5BiK,EAAW7M,KAAI,SAAC+M,GACb,OACI,kBAAC,IAAD,CAAMtR,UAAU,QACZ,+BAAI,yCAAJ,IAA2B,0BAAMC,MAAO,CAAEsR,UAAW,WAAaD,EAAUtP,KAAKwP,aAAjF,KACA,gCAAK,0CAAL,IAA6B,0BAAMvR,MAAO,CAAEsR,UAAW,WAAaD,EAAUtP,KAAK+B,OAAnF,KACA,2BAAG,8CAAH,IAAgCuN,EAAUtP,KAAKuL,aAC/C,4BAAQtN,MAAO,CAAEuJ,MAAO,SAAWxI,QAAS,WAAQiQ,GAAkBK,EAAU/O,IAAIW,MAAMV,MAA1F,mBCErBiP,GA5BC,WACd,OACE,6BAEE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOZ,KAAK,IAAIC,QAAS,kBAAC,GAAD,MAAcC,OAAK,IAC5C,kBAAC,IAAD,CAAOF,KAAK,cAAcC,QAAS,kBAAC,GAAD,MAAkBC,OAAK,IAC1D,kBAAC,IAAD,CACE9E,KAAK,WACL4E,KAAK,mBACLC,QAAS,kBAAC,GAAD,MACTC,OAAK,IAEP,kBAAC,IAAD,CACE9E,KAAK,WACL4E,KAAK,qBACLC,QAAS,kBAAC,GAAD,MACTC,OAAK,Q,8BCkBFW,GApCA,WAAM,MAEM7R,cAAjBC,EAFW,EAEXA,OAAQC,EAFG,EAEHA,KAShB,OACE,yBAAKC,UAAU,WACb,4BACE,wBAAIC,MAAO,CAAE0R,SAAU,OAAQC,WAAY,qBACzC,yBAAKxR,IAAKC,KAAMC,IAAI,OAAOC,MAAO,GAAIC,OAAQ,KAC9C,6BAFF,sBAKA,wBAAIR,UAAU,OAAOC,MAAO,CAAE4R,OAAQ,YACpC,uBACE9I,OAAO,SACPhI,IAAI,sBACJ+Q,KAAK,IACL9Q,QArBW,WACJ,IAAIC,IAAQC,OAAO,CAChCC,OAAQpB,EAAK,mCAAmCoB,SAE3CC,MAAMC,QAAEC,QAAO,IACtBxB,MAmBQ,kBAACyB,EAAA,EAAD,MAPF,c,iDC+IKwQ,GArKA,WAAO,IAEZ5F,EADStM,cAATE,KACAoM,MACR/I,QAAQC,IAAI8I,GAEZ,IAAI4D,EAAM,EACNC,EAAqB,EANN,EAUa5J,mBAAS,IAVtB,mBAUZ6G,EAVY,KAUF+E,EAVE,KAWnBzL,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEkE,GAAY,4CACTzB,MAAK,SAACrC,GACLgQ,EAAYhQ,MAEbwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACuG,IAtBe,MAwBS7G,mBAAS,IAxBlB,mBAwBZ2L,EAxBY,KAwBJE,EAxBI,KAyBnB1L,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEiO,GAAW,4CACRxL,MAAK,SAACrC,GACLiQ,EAAUjQ,MAEXwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACqL,IAGF9E,EAAS1I,KAAI,SAAC2N,GACZ,OAAIA,EAAQlQ,KAAKmK,QAAUA,EAEvB,oCACG4F,EAAOxN,KAAI,SAAC0L,EAAQpP,GACnB,IACIqP,EADQgC,EAAQlQ,KAAKL,SACLiD,MAAM,KAC1BxB,QAAQC,IAAI6M,EAAQ,GAAK,GACzB,IAAIhL,EAAQgL,EAAQ,GAAK,EAWzB,OAVAA,EAAO,UAAMA,EAAQ,GAAd,YAAoBA,EAAQ,GAA5B,YAAkChL,GACzC9B,QAAQC,IAAI6M,GAEVgC,EAAQlQ,KAAKkK,UAAY+D,EAAOjO,KAAK6K,QACrCqD,IAAYD,EAAOjO,KAAKL,WAExBoO,GAAYE,EAAOjO,KAAKyM,WAAawB,EAAOjO,KAAK4L,aACjDoC,GACuBZ,SAASa,EAAOjO,KAAK4L,eAEvC,kCAKR,iCAGXxK,QAAQC,IAAI0M,EAAKC,GACjB,IAAIG,EAAYJ,EAAMC,EAItB,OAHA5M,QAAQC,IAAI8M,EAAUC,QAAQ,IAI5B,6BACE,6BACA,6BACA,kBAAC,IAAD,CAAKrJ,OAAQ,CAAC,GAAI,KAGhB,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CAAMnH,UAAU,QACd,gCACG,IACD,6CAAuB,KAExBiN,EAAS1I,KAAI,SAAC2N,GACb,OAAIA,EAAQlQ,KAAKmK,QAAUA,EAEvB,oCACE,kBAAC,SAAD,CAAO6C,OAAO,KACZ,kBAAC,SAAD,KACE,kBAAC,MAAD,KACE,kBAAC,MAAD,iBACA,kBAAC,MAAD,gBACA,kBAAC,MAAD,qBACA,kBAAC,MAAD,YACA,kBAAC,MAAD,cACA,kBAAC,MAAD,kBACA,kBAAC,MAAD,cACA,kBAAC,MAAD,sBAGJ,kBAAC,SAAD,KACG+C,EAAOxN,KAAI,SAAC0L,EAAQpP,GACnB,IACIqP,EADQgC,EAAQlQ,KAAKL,SACLiD,MAAM,KAC1BxB,QAAQC,IAAI6M,EAAQ,GAAK,GACzB,IAAIhL,EAAQgL,EAAQ,GAAK,EAMzB,OALAA,EAAO,UAAMA,EAAQ,GAAd,YAAoBA,EAAQ,GAA5B,YAAkChL,GACzC9B,QAAQC,IAAI6M,GAKVgC,EAAQlQ,KAAKkK,UAAY+D,EAAOjO,KAAK6K,QACrCqD,IAAYD,EAAOjO,KAAKL,SAGtB,kBAAC,MAAD,KACE,kBAAC,MAAD,KAAKsO,EAAOjO,KAAKL,UACjB,kBAAC,MAAD,KAAKsO,EAAOjO,KAAK2L,SACjB,kBAAC,MAAD,KAAKsC,EAAOjO,KAAK4L,cACjB,kBAAC,MAAD,KAAKqC,EAAOjO,KAAKqM,KACjB,kBAAC,MAAD,KAAK4B,EAAOjO,KAAKsM,OACjB,kBAAC,MAAD,KAAK2B,EAAOjO,KAAKuM,WACjB,kBAAC,MAAD,KAAK0B,EAAOjO,KAAKwM,OACjB,kBAAC,MAAD,KAAKyB,EAAOjO,KAAKyM,aAIhB,oCAOZ,iCAET,6BACA,gCACE,oCAAU0B,EAAUC,QAAQ,KAG9B,gCACE,kBAAC,IAAD,CAAKpJ,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC/B,kBAAC,IAAD,CAAMhH,GAAG,oBACP,kBAAC,IAAD,CAAMH,UAAU,QACd,gCACG,IACD,yDAAmC,cC1J1C,SAASiK,KAAe,IAAD,EACJ7D,mBAAS,IADL,mBAC7B8D,EAD6B,KACnBC,EADmB,KAqBpC,OALA5D,qBAAU,WAZS0B,GAASgB,WAAW1G,IAAI,SAAS+G,MAAM,SAC/CM,GAAG,SAAS,SAACC,GACpB,IAAMqB,EAAYrB,EAASE,MACrBoB,EAAO,GACb,IAAK,IAAI3I,KAAM0I,EACbC,EAAK/B,KAAK,CAAE5G,KAAIuI,IAAKG,EAAU1I,KAEjC,IAAMyI,EAAQ,uBAAOf,GAAaiB,GAClChB,EAAYc,QAMb,IAEH7H,QAAQC,IAAI6G,EAASzF,QAEnB,6BACE,yCAECyF,EACGA,EAAS3F,KAAI,YAAkB,IAAf/B,EAAc,EAAdA,GAAIuI,EAAU,EAAVA,IAClB,OACE,yBAAKlK,IAAK2B,GACR,4BAAQpC,IAAK2K,EAAKzK,IAAI,UAAUC,MAAM,OAAOC,OAAO,QACpD4K,YAAY,UAKlB,ICpCK,SAAS/B,GAAT,GAAyB,IAATH,EAAQ,EAARA,KAC7B,OACE,6BACE,6BACA,kBAAC,KAAD,KAAOA,EAAKnF,QCHH,SAAS0F,KAAY,IAAD,EACDrD,qBADC,mBAC1BsD,EAD0B,KAChBC,EADgB,KAejC,OAZApD,qBAAU,WACQ0B,GAASgB,WAAW1G,IAAI,QAChCqH,GAAG,SAAS,SAACC,GACnB,IAAMC,EAAQD,EAASE,MACjBL,EAAW,GACjB,IAAK,IAAIlH,KAAMsH,EACbJ,EAASN,KAAT,cAAgB5G,MAAOsH,EAAMtH,KAE/BmH,EAAYD,QAEb,IAGD,6BACE,wBAAIzJ,MAAO,CAACsR,UAAU,WAAtB,kBACA,6BACC7H,EACGA,EAASnF,KAAI,SAAC2E,EAAMc,GAAP,OAAiB,kBAAC,GAAD,CAAMd,KAAMA,EAAMrI,IAAKmJ,OACrD,ICfV,IAsFe4G,GAtFG,WAAO,IAEbzE,EADStM,cAATE,KACAoM,MACR/I,QAAQC,IAAI8I,GAHQ,MAMY/F,mBAAS,IANrB,mBAMb6G,EANa,KAMH+E,EANG,KAOpBzL,qBAAU,WAAM,4CACZ,sBAAA3E,EAAA,sDACIkE,GAAY,4CACPzB,MAAK,SAACrC,GACHgQ,EAAYhQ,MAEfwE,OAAM,SAACC,GACJrD,QAAQC,IAAIoD,MANxB,4CADY,uBAAC,WAAD,wBAUZC,KACD,CAACuG,IAlBgB,MAoBY7G,mBAAS,IApBrB,mBAoBb0H,EApBa,KAoBHiB,EApBG,KAkCpB,OAbAxI,qBAAU,WAAM,4CACZ,sBAAA3E,EAAA,sDACImE,GAAa,4CACR1B,MAAK,SAACrC,GACH+M,EAAY/M,MAEfwE,OAAM,SAACC,GACJrD,QAAQC,IAAIoD,MANxB,4CADY,uBAAC,WAAD,wBAUZC,KACD,CAACoH,IAGA,yBAAK9N,UAAU,mBACX,6BACA,6BACA,kBAAC,IAAD,CAAK+G,OAAQ,CAAC,GAAI,KACbkG,EAAS1I,KAAI,SAAC2N,GACX,GAAIA,EAAQlQ,KAAKmK,QAAUA,EAAO,CAC9B,GAAK2B,EAASrJ,OAIV,OAAQ,oCACHqJ,EAASvJ,KAAI,SAAC4N,GACX,IACIxN,EADUwN,EAASnQ,KAAK+B,MACVa,MAAM,KACxB,OAAID,EAAI,KAAOuN,EAAQlQ,KAAKL,SAEpB,kBAAC,IAAD,CAAKqF,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAAC,IAAD,CAAMnH,UAAU,QACZ,4BAAK2E,EAAI,IACT,6CAAmBwN,EAASnQ,KAAK4L,gBAKzC,kCAjBhBxK,QAAQC,IAAI,kBAuBpB,OAAQ,iCAGZ,6BACA,6BACA,kBAAC,IAAD,CAAK2D,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7B,kBAAC,IAAD,CAAMnH,UAAU,QACZ,kBAAC,GAAD,QAIR,kBAAC,IAAD,CAAKgH,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7B,kBAAC,IAAD,CAAMnH,UAAU,QACZ,kBAAC,GAAD,WC6CTqQ,GA7HW,WAAO,IAEvBlE,EADStM,cAATE,KACAoM,MACR/I,QAAQC,IAAI8I,GACZ,IAAI4D,EAAM,EACNC,EAAqB,EALK,EAOE5J,mBAAS,IAPX,mBAOvB6G,EAPuB,KAOb+E,EAPa,KAQ9BzL,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEkE,GAAY,4CACTzB,MAAK,SAACrC,GACLgQ,EAAYhQ,MAEbwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACuG,IAnB0B,MAqBA7G,mBAAS,IArBT,mBAqBrB2L,EArBqB,KAqBbE,EArBa,KAsB9B1L,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEiO,GAAW,4CACRxL,MAAK,SAACrC,GACLiQ,EAAUjQ,MAEXwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACqL,IAGF9E,EAAS1I,KAAI,SAAC2N,GACZ,OAAIA,EAAQlQ,KAAKmK,QAAUA,EAEvB,oCACG4F,EAAOxN,KAAI,SAAC0L,EAAQpP,GAKnB,OAJIqR,EAAQlQ,KAAKkK,UAAY+D,EAAOjO,KAAK6K,QAAUqF,EAAQlQ,KAAKL,WAAasO,EAAOjO,KAAKL,WACvFoO,GAAYE,EAAOjO,KAAKyM,WAAawB,EAAOjO,KAAK4L,aACjDoC,GAA0CZ,SAASa,EAAOjO,KAAK4L,eAEzD,kCAKR,iCAGVxK,QAAQC,IAAI0M,EAAKC,GACjB,IAAIM,EAAaP,EAAMC,EAKzB,OAJE5M,QAAQC,IAAIiN,EAAWF,QAAQ,IAK/B,6BACE,6BACA,6BACA,kBAAC,IAAD,CAAKrJ,OAAQ,CAAC,GAAI,KAGhB,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CAAMnH,UAAU,QACd,oCAAS,oDAAT,KACCiN,EAAS1I,KAAI,SAAC2N,GACb,OAAIA,EAAQlQ,KAAKmK,QAAUA,EAEvB,oCACE,kBAAC,SAAD,CAAO6C,OAAO,KACZ,kBAAC,SAAD,KACE,kBAAC,MAAD,KACE,kBAAC,MAAD,iBACA,kBAAC,MAAD,gBACA,kBAAC,MAAD,qBACA,kBAAC,MAAD,YACA,kBAAC,MAAD,cACA,kBAAC,MAAD,kBACA,kBAAC,MAAD,cACA,kBAAC,MAAD,sBAGJ,kBAAC,SAAD,KACG+C,EAAOxN,KAAI,SAAC0L,EAAQpP,GAEnB,OADAuC,QAAQC,IAAI6O,EAAQlQ,KAAKkK,QAAS+D,EAAOjO,KAAK6K,QAC1CqF,EAAQlQ,KAAKkK,UAAY+D,EAAOjO,KAAK6K,QAAUqF,EAAQlQ,KAAKL,WAAasO,EAAOjO,KAAKL,SAErF,kBAAC,MAAD,KACE,kBAAC,MAAD,KAAKsO,EAAOjO,KAAKL,UACjB,kBAAC,MAAD,KAAKsO,EAAOjO,KAAK2L,SACjB,kBAAC,MAAD,KAAKsC,EAAOjO,KAAK4L,cACjB,kBAAC,MAAD,KAAKqC,EAAOjO,KAAKqM,KACjB,kBAAC,MAAD,KAAK4B,EAAOjO,KAAKsM,OACjB,kBAAC,MAAD,KAAK2B,EAAOjO,KAAKuM,WACjB,kBAAC,MAAD,KAAK0B,EAAOjO,KAAKwM,OACjB,kBAAC,MAAD,KAAKyB,EAAOjO,KAAKyM,aAIf,oCAOZ,iCAET,6BACD,gCACE,qCAAW6B,EAAWF,QAAQ,UC1HtCnP,GAAUO,EAAQ,IACtBH,GAAIJ,GAAQG,MACDI,EAAQ,IACdC,SACA,IAAM2Q,GAAY,uCAAG,WAAOZ,EAAarF,EAAOkG,EAAOC,EAAanR,GAA/C,iBAAAS,EAAA,sEAGpBC,EAAc,IAAIZ,GAAQC,OAAO,CAAEC,WAHf,SAKHU,EAAYT,MAC/BC,GAAES,OACAT,GAAEU,WAAW,cACb,CAAEC,KAAM,CAAEwP,YAAaA,EAAarF,MAAOA,EAAOpI,MAAOsO,EAAO9E,YAAa+E,MARzD,cAKlBrQ,EALkB,yBAYjB,CACLC,WAAY,IACZC,KAAMC,KAAKC,UAAU,CAAEC,QAASL,EAAOM,IAAIC,OAdrB,yDAiBjB,CAAEN,WAAY,IAAKC,KAAM,KAAIM,aAjBZ,yDAAH,8DCMjB8P,GAAaC,KAAbD,SAwFOE,GAtFG,WAAO,IAAD,EACErM,mBAAS,IADX,mBACfsM,EADe,KACTC,EADS,OAEIvM,qBAFJ,mBAEfiM,EAFe,KAERzJ,EAFQ,OAGgBxC,qBAHhB,mBAGfkM,EAHe,KAGFM,EAHE,KAKdzG,EADStM,cAATE,KACAoM,MALc,EAQU/F,mBAAS,IARnB,mBAQf6G,EARe,KAQL+E,EARK,iDAuBtB,WAAmCU,EAAMvG,EAAOkG,EAAOC,GAAvD,SAAA1Q,EAAA,sDACEwB,QAAQC,IAAIqP,EAAMvG,EAAOkG,EAAOC,GAE9BrF,EAAS1I,KAAI,SAAC2N,GACRA,EAAQlQ,KAAKmK,QAAUA,IACrB+F,EAAQlQ,KAAKiK,KAAK4G,gBAAkBH,EAAKG,eAA0B,KAATH,QAAwBvP,IAATuP,OAC7DvP,IAAVkP,GAAiC,KAAVA,QAAgClP,IAAhBmP,GAA6C,KAAhBA,EACtE3P,IAAKC,KACH,GACA,kBACA,aAIFwP,GAAaM,EAAMvG,EAAOkG,EAAOC,EAAa,4CAC9C3P,IAAKC,KACH,GACA,sBACA,YAKJD,IAAKC,KACH,GACA,+BACA,eA1BZ,4CAvBsB,sBA4DtB,OAnDA2D,qBAAU,WAAM,4CACd,sBAAA3E,EAAA,sDACEkE,GAAY,4CACTzB,MAAK,SAACrC,GACLgQ,EAAYhQ,MAEbwE,OAAM,SAACC,GACNrD,QAAQC,IAAIoD,MANlB,4CADc,uBAAC,WAAD,wBAUdC,KACC,CAACuG,IAyCF,yBAAKhN,MAAO,CAAEoH,YAAa,OAAQnH,WAAY,OAAQuN,UAAW,OAAQqF,SAAU,UAClF,kBAAC,IAAD,CAAK9L,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC/B,kBAAC,IAAD,CACEnH,UAAU,OACVC,MAAO,IAEP,oCACA,kBAAC,KAAD,CAAOiP,YAAY,aAAarG,SAAU,SAACsG,GAAD,OAAWwD,EAAQxD,EAAMpG,OAAO7F,UAC1E,6BACA,6BACA,qCACA,kBAAC,KAAD,CAAOgM,YAAY,YAAYrG,SAAU,SAACsG,GAAD,OAAWvG,EAASuG,EAAMpG,OAAO7F,UAC1E,6BACA,6BACA,2CACA,kBAACqP,GAAD,CAAUrD,YAAY,kBAAkB6D,KAAM,EAAGlK,SAAU,SAACsG,GAAD,OAAWyD,EAAezD,EAAMpG,OAAO7F,UAClG,6BACA,6BACA,kBAAC,IAAD,CAAQ2D,KAAK,UAAUmM,OAAK,EAAChS,QAAS,YA/ExB,0CA+EgCiS,CAAoBP,EAAMvG,EAAOkG,EAAOC,KAAtF,cCxCKY,GA7Ca,WAAO,IAEvB/G,EADStM,cAATE,KACAoM,MAFsB,EAKM/F,mBAAS,IALf,mBAKvBgL,EALuB,KAKXC,EALW,KAmB9B,OAbA9K,qBAAU,WAAM,4CACZ,sBAAA3E,EAAA,sDACIsP,GAAe,4CACV7M,MAAK,SAACrC,GACHqP,EAAcrP,MAEjBwE,OAAM,SAACC,GACJrD,QAAQC,IAAIoD,MANxB,4CADY,uBAAC,WAAD,wBAUZC,KACD,CAAC0K,IAGA,yBAAKpR,UAAU,mBACX,6BAAM,6BACN,gCAAQ,qDACR,6BACA,kBAAC,IAAD,CAAK+G,OAAQ,CAAC,GAAI,KACd,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC5BiK,EAAW7M,KAAI,SAAC4O,GACb,OAAIA,EAAWnR,KAAKmK,QAAUA,EAEtB,kBAAC,IAAD,CAAMnM,UAAU,QACZ,+BAAI,4BAAQC,MAAO,CAAE0R,SAAU,SAA3B,SAAJ,IAAwD,0BAAM1R,MAAO,CAAEsR,UAAW,WAAa4B,EAAWnR,KAAKwP,aAA/G,KACA,gCAAK,4BAAQvR,MAAO,CAAE0R,SAAU,SAA3B,UAAL,IAA0D,0BAAM1R,MAAO,CAAEsR,UAAW,WAAa4B,EAAWnR,KAAK+B,OAAjH,KACA,2BAAG,8CAA4BoP,EAAWnR,KAAKuL,cAInD,qCCCjB6F,GA3BC,WACd,OACE,kBAAC,IAAD,KACE,kBAAC,SAAD,KACE,kBAAC,IAAD,CAAMpT,UAAU,YAAYG,GAAG,KAC7B,kBAACkT,GAAA,EAAD,MADF,kBAGF,kBAAC,IAAD,CAAMrT,UAAU,YAAYG,GAAG,cAC3B,kBAACmT,GAAA,EAAD,MADJ,sBAGE,kBAAC,IAAD,CAAMtT,UAAU,YAAYG,GAAG,wBAC7B,kBAACoT,GAAA,EAAD,MADF,wBAGA,kBAAC,IAAD,CAAMvT,UAAU,YAAYG,GAAG,WAC7B,kBAACwQ,GAAA,EAAD,MADF,iBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,IAAIC,QAAS,kBAAC,GAAD,MAAeC,OAAK,IAC7C,kBAAC,IAAD,CAAOF,KAAK,UAAUC,QAAS,kBAAC,GAAD,MAAYC,OAAK,IAChD,kBAAC,IAAD,CAAOF,KAAK,mBAAmBC,QAAS,kBAAC,GAAD,MAAuBC,OAAK,IACpE,kBAAC,IAAD,CAAOF,KAAK,aAAaC,QAAS,kBAAC,GAAD,MAAeC,OAAK,IACtD,kBAAC,IAAD,CAAOF,KAAK,uBAAuBC,QAAS,kBAAC,GAAD,MAAyBC,OAAK,OCzBnEyC,GATG,WAChB,OACE,6BACC,kBAAC,GAAD,MACA,kBAAC,GAAD,CAASC,WAAY,YAAaC,iBAAkB,sBCiC1CC,OAnCf,WAAe,MAEgC9T,cAArC+T,EAFK,EAELA,gBAAiBC,EAFZ,EAEYA,UAAW9T,EAFvB,EAEuBA,KAFvB,EAGW+T,IAAM1N,WAHjB,mBAGN2N,EAHM,KAGAC,EAHA,KAILC,EAAsBpU,cAAtBoU,kBAQR,OANAH,IAAMvN,WAAU,WACVxG,GACFiU,EAAQjU,EAAK,mCAAmCgU,QAEjD,CAAChU,IAEA8T,EAEA,gCACF,yBAAK5T,MAAO,CAACwN,UAAU,OAAQrN,IAAKC,KAAMC,IAAI,aAAaC,MAAO,IAAKC,OAAQ,OAK7EoT,GACFxQ,QAAQC,IAAI0Q,GAEV,kBAAC,IAAMG,SAAP,KACE,oCACY,SAATH,GAAmB,kBAAC,GAAD,MACV,YAATA,GAAsB,kBAAC,GAAD,cAK7BE,KCzBEE,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOjT,GAC9BkT,UAAUC,cACPC,SAASH,GACTrQ,MAAK,SAAAyQ,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5K,QACfuK,UAAUC,cAAcO,YAI1B/R,QAAQC,IACN,iHAKE5B,GAAUA,EAAO2T,UACnB3T,EAAO2T,SAASN,KAMlB1R,QAAQC,IAAI,sCAGR5B,GAAUA,EAAO4T,WACnB5T,EAAO4T,UAAUP,WAO5BtO,OAAM,SAAAC,GACLrD,QAAQqD,MAAM,4CAA6CA,MC1FjE6O,IAASC,OACP,kBAAC,IAAMrB,SAAP,KACE,kBAAC,IAAD,CACEsB,OAAQC,4BACRC,SAAUD,mCACVE,YAAatB,OAAOC,SAASsB,QAE3B,kBAAC,GAAD,QAGNC,SAASC,eAAe,SDMnB,SAAkBrU,GACvB,GAA6C,kBAAmBkT,UAAW,CAGzE,GADkB,IAAIoB,IAAIN,GAAwBpB,OAAOC,SAASxC,MACpD8D,SAAWvB,OAAOC,SAASsB,OAIvC,OAGFvB,OAAO2B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMe,GAAN,sBAEPtB,KAgEV,SAAiCO,EAAOjT,GAEtCwU,MAAMvB,EAAO,CACXwB,QAAS,CAAE,iBAAkB,YAE5B7R,MAAK,SAAA8R,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAMnS,MAAK,SAAAyQ,GACjCA,EAAa2B,aAAapS,MAAK,WAC7BgQ,OAAOC,SAASoC,eAKpBjC,GAAgBC,EAAOjT,MAG1B+E,OAAM,WACLpD,QAAQC,IACN,oEAvFAsT,CAAwBjC,EAAOjT,GAI/BkT,UAAUC,cAAc4B,MAAMnS,MAAK,WACjCjB,QAAQC,IACN,iHAMJoR,GAAgBC,EAAOjT,OC7B/BmT,I,mBCrBApV,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.777adb32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uot.ccc106df.png\";","module.exports = __webpack_public_path__ + \"static/media/program.be833fc1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/book1.4744a36f.png\";","module.exports = __webpack_public_path__ + \"static/media/uot.ccc106df.png\";","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport faunadb, { query as q } from \"faunadb\";\nimport { Layout, Menu } from \"antd\";\nimport { LogoutOutlined, InboxOutlined } from \"@ant-design/icons\";\nimport logo from \"../../loader-images/uot.png\";\nimport \"./Menu.css\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\n\nconst { Header } = Layout;\n\nconst Menubar = () => {\n  //-------------Database logout user session----------------\n  const { logout, user } = useAuth0();\n  const handleLogout = () => {\n    const client = new faunadb.Client({\n      secret: user[\"https://fauna.com/user_metadata\"].secret,\n    });\n    client.query(q.Logout(true));\n    logout();\n  };\n\n  return (\n    <Layout>\n      <Header className=\"header\">\n        <div className=\"logo\" style={{ marginLeft: \"3%\" }}>\n          <Link to='/'>\n            <img src={logo} alt=\"logo\" width={60} height={60} />\n            <span className=\"title\">University Of Thal</span>\n          </Link>\n\n        </div>\n\n        <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[\"0\"]}>\n          <Menu.Item key=\"1\">\n            \n            <Link to=\"/complaints\">\n              Complaints &nbsp; <InboxOutlined />\n            </Link>\n          \n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Link rel=\"noopener noreferrer\" to='/#' onClick={handleLogout}>\n              Logout &nbsp; <LogoutOutlined />\n            </Link>\n          </Menu.Item>\n        </Menu>\n\n      </Header>\n    </Layout>\n  );\n};\n\nexport default Menubar;","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const Addsemester = async (semester, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Create(\n        q.Collection('semesters'),\n        { data: { semester: semester } },\n      )\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n\n\n\n\n","import Swal from 'sweetalert2'\nimport { Addsemester } from '../../../functions/AddSemester';\nasync function SemesterAddition({pname}) {\n  const { value: inputSemester } = await Swal.fire({\n    input: 'number',\n    inputLabel: 'Your Semester Number',\n    inputPlaceholder: 'Enter Semester ',\n    showCancelButton: true\n  })\n  \n  if (inputSemester) {\n    Swal.fire(`Entered Semester: ${inputSemester}`)\n  }\n  // let inputSemester = prompt(\"Enter semester\");\n  if (inputSemester === undefined) {\n    console.log(\"You entered nothing\");\n  } else {\n    await Addsemester(`${pname}-Semester-${inputSemester}`,'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n  }\n}\nexport default SemesterAddition;\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const DeleteSemester = async (id, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Delete(q.Ref(q.Collection(\"semesters\"),id))\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const DeleteThisSemesterStudents = async (id, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Delete(q.Ref(q.Collection(\"Students\"),id))\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const DeleteThisSemesterSubjects = async (id, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Delete(q.Ref(q.Collection(\"Subjects\"),id))\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n","import React from 'react'\nimport Swal from 'sweetalert2'\nimport { DeleteSemester } from '../../../functions/DeleteSemester';\nimport { DeleteThisSemesterStudents } from '../../../functions/DeleteThisSemesterStudents'\nimport { DeleteThisSemesterSubjects } from '../../../functions/DeleteThisSemesterSubjects'\nasync function SemesterDeletion(sname, id, StudentData, SubjectData) {\n  console.log(sname, id, StudentData, SubjectData)\n  Swal.fire({\n    title: 'Are you sure?',\n    text: \"\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Yes, delete it!'\n  }).then((result) => {\n    if (result.isConfirmed) {\n      DeleteSemester(id, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n      StudentData.map((stData) => {\n        if (sname === stData.data.semester) {\n          let id = stData.ref.value.id;\n          DeleteThisSemesterStudents(id, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n        }\n        return (<div></div>)\n      })\n     if(!SubjectData.length){\n       console.log('subjects empty')\n     }\n     else{\n      SubjectData.map((el, key) => {\n        let subject = el.data.title;\n        var res = subject.split(\"_\");\n        console.log(res[0])\n        if (res[0] === sname) {\n          let id = el.ref.value.id;\n          DeleteThisSemesterSubjects(id, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n        }\n        return (<div></div>)\n      })\n     }\n      Swal.fire(\n        'Deleted!',\n        'Semester has been deleted.',\n        'success'\n      )\n    }\n  })\n\n}\nexport default SemesterDeletion;","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const UpdateSemester = async (id,NewSemesterValue, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Update(q.Ref(q.Collection(\"semesters\"), id),\n        { data: { semester: NewSemesterValue } },\n      )\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const UpdateStudentSemester = async (id,NewSemesterValue, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Update(q.Ref(q.Collection(\"Students\"), id),\n        { data: { semester: NewSemesterValue } },\n      )\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n\n\n\n\n\n// var faunadb = require('faunadb'),\n//   q = faunadb.query;\n\n// // Docs on event and context https://www.netlify.com/docs/functions/#the-handler-method\n// exports.handler = async (event, context) => {\n\n//   if (event.httpMethod !== \"POST\") {\n//     return { statusCode: 405, body: \"Method Not Allowed\" };\n//   }\n\n//   try {\n//     const messageBody = JSON.parse(event.body);\n//     var adminClient = new faunadb.Client({ secret: process.env.FAUNADB_SECRET_KEY });\n\n//     const result = await adminClient.query(\n//       q.Update(q.Ref(q.Collection(\"Students\"),messageBody.id),\n//       { data: { semester: messageBody.NewSemesterValue} },\n//       )\n//     )\n\n//     return {\n//       statusCode: 200,\n//       body: JSON.stringify({ message:  result.ref.id}),\n//     }\n//   } catch (err) {\n//     return { statusCode: 500, body: err.toString() }\n//   }\n// }","import Swal from 'sweetalert2'\nimport React from 'react'\nimport { UpdateSemester } from '../../../functions/UpdateSemester';\nimport { UpdateStudentSemester } from '../../../functions/UpdateStudentSemester';\nimport { DeleteThisSemesterSubjects } from '../../../functions/DeleteThisSemesterSubjects';\n\nasync function SemesterUpdation(pname, sname, id, StudentData, SubjectData) {\n  console.log(pname, sname, id, StudentData)\n  let semN0 = sname.split(\"-\");\n  console.log(semN0[2])\n  // let inputNewSemester = prompt(\"Enter New Semester Number\");\n  const { value: inputNewSemester } = await Swal.fire({\n    input: 'number',\n    inputLabel: 'Your Semester Number',\n    inputValue: semN0[2],\n    inputPlaceholder: 'Enter Semester ',\n    showCancelButton: true\n  })\n\n  if (inputNewSemester) {\n    Swal.fire(`Entered Semester: ${inputNewSemester}`)\n  }\n  if (inputNewSemester === undefined) {\n    console.log(\"You entered nothing\")\n  }\n  else {\n    let NewSemesterValue = `${pname}-Semester-${inputNewSemester}`;\n    await UpdateSemester(id, NewSemesterValue, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n  }\n\n  StudentData.map((stData) => {\n    if (sname === stData.data.semester) {\n      if (inputNewSemester === undefined) {\n        console.log(\"You entered nothing\")\n      }\n      else {\n        let NewSemesterValue = `${pname}-Semester-${inputNewSemester}`;\n        UpdateStudentSemester(stData.ref.value.id, NewSemesterValue, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n      }\n    }\n    return(<div></div>)\n  })\n  if(!SubjectData.length){\n    console.log('subjects empty')\n  }\n  else{\n    SubjectData.map((el, key) => {\n      let subject = el.data.title;\n      var res = subject.split(\"_\");\n      console.log(res[0])\n      if (res[0] === sname) {\n        DeleteThisSemesterSubjects(el.ref.value.id, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n      }\n      return(<div></div>)\n    })\n  }\n}\nexport default SemesterUpdation;","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const ReadSemester = async (secret) => {\n  try {\n    var client = new faunadb.Client({ secret });\n    var result = await client.query(\n      q.Map(\n                q.Paginate(q.Documents(q.Collection(\"semesters\"))),\n                q.Lambda(x => q.Get(x))\n              )\n    );\n\n    return result.data\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const ReadStudent = async (secret) => {\n  try {\n    var client = new faunadb.Client({ secret });\n    var result = await client.query(\n      q.Map(\n        q.Paginate(q.Documents(q.Collection(\"Students\"))),\n        q.Lambda(x => q.Get(x))\n      )\n    );\n\n    return result.data\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const ReadSubjects = async (secret) => {\n  try {\n    var client = new faunadb.Client({ secret });\n    var result = await client.query(\n      q.Map(\n        q.Paginate(q.Documents(q.Collection(\"Subjects\"))),\n        q.Lambda(x => q.Get(x))\n      )\n    );\n\n    return result.data\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Row, Col, Card, Tooltip } from \"antd\";\nimport {\n  EditOutlined,\n  ArrowRightOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport logo from \"./images/program.jpg\";\nimport { Link, useParams } from \"react-router-dom\";\nimport SemesterAddition from \"./api/SemesterAddition\";\nimport SemesterDeletion from \"./api/SemesterDeletion\";\nimport SemesterUpdation from \"./api/SemesterUpdation\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport spinner from '../../loader-images/final-uot.gif'\nimport { ReadSemester } from \"../../functions/ReadSemester\";\nimport { ReadStudent } from \"../../functions/ReadStudent\";\nimport { ReadSubjects } from \"../../functions/ReadSubjects\";\n\nconst { Meta } = Card;\n\nconst Semester = () => {\n  let { pname } = useParams();\n\n  //-------------------semester Reading---------------------------------\n  const [mydata, setData] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadSemester('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setData(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [mydata]);\n\n  //--------------------students Reading-------------------------\n  const [StudentData, setStudentData] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadStudent('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setStudentData(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [StudentData]);\n  //--------------------subjects Reading-------------------------\n  const [SubjectData, setSubjectData] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadSubjects('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setSubjectData(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [SubjectData]);\n  return (\n    <div className=\"container-fluid\">\n      <br />\n      <h1>Semester Details</h1>\n      <Button\n        onClick={() => {\n          SemesterAddition({ pname });\n        }}\n        type=\"primary\"\n      >\n        Add Semester <PlusOutlined />\n      </Button>\n\n      <br />\n      <br />\n      <br />\n      {!mydata.length ? (\n        <center>\n          <img src={spinner} width={200} height={200} alt='loading...' />\n        </center>\n      ) : (\n        <Row gutter={[32, 32]}>\n          {mydata.map((el, key) => {\n            let semester = el.data.semester;\n            var res = semester.split(\"-\");\n            if (res[0] === pname) {\n              //  console.log(el.ref.value.id)\n              return (\n                <Col xs={24} sm={12} md={12} lg={8}>\n                  <Card\n                    className=\"card\"\n                    key={key}\n                    style={{\n                      textAlign: \"center\",\n                      marginLeft: \"auto\",\n                      marginRight: \"auto\",\n                      width: 270,\n                    }}\n                    cover={<img alt=\"example\" src={logo} />}\n                    actions={[\n                      <Tooltip title=\"Delete\">\n                        <DeleteOutlined\n                          key=\"delete\"\n                          onClick={() => {\n                            SemesterDeletion(\n                              el.data.semester,\n                              el.ref.value.id,\n                              StudentData,\n                              SubjectData\n                            );\n                          }}\n                        />\n                      </Tooltip>,\n                      <Tooltip title=\"Edit\">\n                        <EditOutlined\n                          key=\"edit\"\n                          onClick={() => {\n                            SemesterUpdation(\n                              pname,\n                              el.data.semester,\n                              el.ref.value.id,\n                              StudentData,\n                              SubjectData\n                            );\n                          }}\n                        />\n                      </Tooltip>,\n                      <Tooltip title=\"View\">\n                        <Link\n                          to={`/students/${el.data.semester}`}\n                          params={{ sname: el.data.semester }}\n                        >\n                          <ArrowRightOutlined />\n                        </Link>\n                      </Tooltip>,\n                    ]}\n                  >\n                    <Meta title={el.data.semester} />\n                  </Card>\n                </Col>\n              );\n            }\n            return(<div></div>)\n          })}\n        </Row>\n      )}\n    </div>\n  );\n};\n\nexport default Semester;\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const AddProgram = async (inputProgram, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Create(\n        q.Collection('programs'),\n        { data: { program: inputProgram } },\n      )\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n","import Swal from 'sweetalert2'\nimport { AddProgram } from '../../../functions/AddProgram'\nasync function ProgramAddition() {\n  const { value: inputProgram } = await Swal.fire({\n    input: 'text',\n    inputLabel: 'Program Title',\n    inputPlaceholder: 'Enter title ',\n    showCancelButton: true\n  })\n  if (inputProgram) {\n    Swal.fire(`Entered Program: ${inputProgram}`)\n  }\n    // let inputProgram = prompt(\"Enter Progam Name\");\n    if (inputProgram === undefined){\n      console.log(\"You entered nothing\")\n    }\n    else{\n    await AddProgram(inputProgram,'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n  }\nexport default ProgramAddition;","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  projectId: \"uot-test\",\n  appId: \"1:25003520162:web:178a4afc22e40b1e21e7fb\",\n  databaseURL: \"https://uot-test-default-rtdb.firebaseio.com\",\n  storageBucket: \"uot-test.appspot.com\",\n  locationId: \"asia-south1\",\n  apiKey: \"AIzaSyCA2g1fKtgwuLvLqMYSFHsET4YYvOkZy8E\",\n  authDomain: \"uot-test.firebaseapp.com\",\n  messagingSenderId: \"25003520162\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { useState } from 'react';\nimport firebase from './firebase';\nimport {Input,Button} from 'antd';\n\nexport default function Form() {\n  const [title, setTitle] = useState('');\n\n  const handleOnChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const createTodo = () => {\n    \n    const todoRef = firebase.database().ref('Todo');\n    const todo = {\n      title,\n      complete: false,\n    };\n\n    todoRef.push(todo);\n  };\n  return (\n    <div>\n      <Input type=\"text\" onChange={handleOnChange} value={title} /><br/><br/>\n      <Button type='primary' onClick={createTodo}>Publish</Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport firebase from './firebase';\nimport {Tooltip,List} from 'antd'\nimport {\n  DeleteOutlined,\n} from \"@ant-design/icons\";\n\nexport default function Todo({ todo }) {\n  const deleteTodo = () => {\n    const todoRef = firebase.database().ref('Todo').child(todo.id);\n    todoRef.remove();\n  };\n  return (\n    <div>\n      <br/>\n      <List>{todo.title}<Tooltip title='Delete'>\n        <DeleteOutlined onClick={deleteTodo} style={{float:'right'}} /></Tooltip></List>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport firebase from './firebase';\nimport Todo from './Todo';\n\nexport default function TodoList() {\n  const [todoList, setTodoList] = useState();\n\n  useEffect(() => {\n    const todoRef = firebase.database().ref('Todo');\n    todoRef.on('value', (snapshot) => {\n      const todos = snapshot.val();\n      const todoList = [];\n      for (let id in todos) {\n        todoList.push({ id, ...todos[id] });\n      }\n      setTodoList(todoList);\n    });\n  }, []);\n\n  return (\n    <div>\n      {todoList\n        ? todoList.map((todo, index) => <Todo todo={todo} key={index} />)\n        : ''}\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"./firebase\";\nimport { v4 as uuid } from \"uuid\";\nimport { Button } from 'antd'\n\nexport default function UploadImage() {\n  const [imageUrl, setImageUrl] = useState([]);\n\n  const [state, setstate] = useState(false);\n\n  const readImages = async (e) => {\n    const file = e.target.files[0];\n    const id = uuid();\n    const storageRef = firebase.storage().ref(\"table\").child(id);\n    const imageRef = firebase.database().ref(\"table\").child(\"daily\").child(id);\n    await storageRef.put(file);\n    storageRef.getDownloadURL().then((url) => {\n      imageRef.set(url);\n      const newState = [...imageUrl, { id, url }];\n      setImageUrl(newState);\n    });\n  };\n\n  const getImageUrl = () => {\n    const imageRef = firebase.database().ref(\"table\").child(\"daily\");\n    imageRef.on(\"value\", (snapshot) => {\n      const imageUrls = snapshot.val();\n      const urls = [];\n      for (let id in imageUrls) {\n        urls.push({ id, url: imageUrls[id] });\n      }\n      const newState = [...imageUrl, ...urls];\n      setImageUrl(newState);\n    });\n  };\n  const deleteImage = (id) => {\n    setstate(true);\n    const storageRef = firebase.storage().ref(\"table\").child(id);\n    const imageRef = firebase.database().ref(\"table\").child(\"daily\").child(id);\n    storageRef.delete().then(() => {\n      imageRef.remove();\n    });\n  };\n  useEffect(() => {\n    getImageUrl();\n  }, []);\n\n  console.log(imageUrl.length,imageUrl)\n  return (\n    <div>\n      <h3>Add TimeTable</h3>\n      {imageUrl\n        ? imageUrl.map(({ id, url }) => {\n          return (\n            <div key={id}>\n              <iframe src={url} title='' alt=\"loading\" width='100%' height='400px'\n                frameBorder=\"0\" />\n              <br /> <br />\n              <Button type='danger' style={{ float: 'right' }} onClick={() => deleteImage(id)}>Delete</Button>\n            </div>\n          );\n        })\n        : ''}\n      {state === false && imageUrl.length > 0 ? (\n        <input\n          type=\"file\"\n          accept=\"application/pdf\"\n          disabled\n          onChange={readImages}\n        />\n      ) : (\n          <input type=\"file\" accept=\"application/pdf\" onChange={readImages} />\n        )}\n    </div>\n  );\n}\n","const faunadb = require('faunadb'),\nq = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const ReadPrograms = async (secret) => {\n    try {\n      var client = new faunadb.Client({ secret});\n      var result = await client.query(\n          q.Map(\n            q.Paginate(q.Documents(q.Collection(\"programs\"))),\n            q.Lambda(x => q.Get(x))\n          )    \n      );\n      \n      return result.data\n    } catch (err) {\n      return { statusCode: 500, body: err.toString() }\n    }\n  };\n ","import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Row, Col } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport ProgramAddition from \"./api/ProgramAddition\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport logo from \"../../loader-images/final-uot.gif\";\nimport Form from \"../TimeTable/Form\";\nimport TodoList from \"../TimeTable/TodoList\";\nimport UploadImage from \"../TimeTable/UploadImage\";\nimport { ReadPrograms } from '../../functions/ReadPrograms'\n\nconst Programs = () => {\n  const [mydata, setData] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadPrograms('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setData(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [mydata]);\n  console.log(mydata)\n  return (\n    <div className=\"container-fluid\">\n      <br />\n      <h4>Programs</h4>\n      <Button onClick={ProgramAddition} type=\"primary\">\n        Add Program <PlusOutlined />\n      </Button>\n      <br />\n      <br />\n      <br />\n      {!mydata.length ? (\n        <center>\n          <img src={logo} width={200} height={200} alt='' />\n        </center>\n      ) : (\n          <Row gutter={[32, 32]}>\n            {mydata.map((e, key) => {\n              return (\n                <Col xs={24} sm={12} md={8} lg={6}>\n                  <Link\n                    to={`/semester/${e.data.program}`}\n                    params={{ pname: e.data.program }}\n                  >\n                    <Card className=\"card\" key={key}>\n                      <h2 className=\"card-title\" style={{ textAlign: \"center\" }}>\n                        {e.data.program}\n                      </h2>\n                    </Card>\n                  </Link>\n                </Col>\n              );\n            })}\n          </Row>\n        )}\n      <br />\n      <br />\n      <Row gutter={[32, 32]}>\n        <Col xs={24} sm={12} md={12} lg={18}>\n          <Card className=\"card\">\n            <UploadImage />\n          </Card>\n        </Col>\n        <Col xs={24} sm={12} md={12} lg={6}>\n          <Card className=\"card\">\n            <h4>Add Notification</h4>\n            <hr />\n            <TodoList />\n            <br />\n            <Form />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Programs;\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const AddStudent = async (studentRoll,studentName, studentEmail,studentGender, studentSemester, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Create(\n        q.Collection('Students'),\n        {\n          data: {\n           name: studentName,\n           roll_n0: studentRoll,\n           email: studentEmail,\n           semester: studentSemester,\n           gender: studentGender\n          }\n        },\n      )\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n","import Swal from 'sweetalert2'\nimport { AddStudent } from '../../../functions/AddStudent'\nasync function StudentAddition({ sname }) {\nconst inputOptions = {\n  'Male': 'Male',\n  'Female': 'Female',\n  'Other': 'Other'\n}\n\nSwal.mixin({\n  input: 'text',\n  confirmButtonText: 'Next &rarr;',\n  showCancelButton: true,\n  progressSteps: ['1', '2', '3', '4']\n}).queue([\n  {\n      title: 'Roll Number',\n      text: 'Enter Student Roll Number',\n       },\n  {\n      title: 'Name',\n      text: 'Enter Student Name',\n  },\n  {\n      title: 'Email',\n      text: 'Enter Email ',\n      input: 'email',\n  },\n  {\n      title: 'Gender',\n      text: 'Select Student Gender',\n      input: 'radio',\n      inputOptions: inputOptions,\n  },\n]).then((result) => {\n  if (result.value) {\n      console.log(result.value[0])\n      Swal.fire({\n          title: 'All done!',\n          confirmButtonText: 'ok!'\n      })\n      SendData(result.value);\n  }\n})\n\nasync function SendData(receive) {\n  if (receive[0] === \"\" || receive[1] === \"\" || receive[2] === \"\" || receive[3] === \"\"){\n    Swal.fire(\n      '',\n      'Form is Incomplete!',\n      'warning'\n    )\n  }\n  else{\n    await AddStudent(receive[0],receive[1],receive[2],receive[3],sname,'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n  }\n}\n\n}\nexport default StudentAddition\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const UpdateStudent = async (id,studentRoll,studentName, studentEmail,studentGender, studentSemester, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Update(q.Ref(q.Collection(\"Students\"),id),\n        {\n          data: {\n            name: studentName,\n            roll_n0: studentRoll,\n            email: studentEmail,\n            semester: studentSemester,\n            gender: studentGender\n           }\n        },\n      )\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n\n","import Swal from 'sweetalert2'\nimport { UpdateStudent } from '../../../functions/UpdateStudent'\nasync function StudentUpdation(id,sname,name,rollN0,email,gender) {\nconst inputOptions = {\n  'Male': 'Male',\n  'Female': 'Female',\n  'Other': 'Other'\n}\n\nSwal.mixin({\n  input: 'text',\n  confirmButtonText: 'Next &rarr;',\n  showCancelButton: true,\n  progressSteps: ['1', '2', '3', '4']\n}).queue([\n  {\n      title: 'Roll Number',\n      text: 'Enter Student Roll Number',\n      inputValue: rollN0\n       },\n  {\n      title: 'Name',\n      text: 'Enter Student Name',\n      inputValue: name\n  },\n  {\n      title: 'Email',\n      text: 'Enter Email ',\n      input: 'email',\n      inputValue: email\n  },\n  {\n      title: 'Gender',\n      text: 'Select Student Gender',\n      input: 'radio',\n      inputValue: gender,\n      inputOptions: inputOptions,\n  },\n]).then((result) => {\n  if (result.value) {\n      console.log(result.value[0])\n      Swal.fire({\n          title: 'All done!',\n          confirmButtonText: 'ok!'\n      })\n      SendData(result.value);\n  }\n})\n\nasync function SendData(receive) {\n  console.log(receive);\n  if (receive[0] === \"\" || receive[1] === \"\" || receive[2] === \"\" || receive[3] === \"\"){\n    Swal.fire(\n      '',\n      'Form is Incomplete!',\n      'warning'\n    )\n  }\n  else{\n  await UpdateStudent(id,receive[0],receive[1],receive[2],receive[3],sname,'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n}\n}\n\n}\nexport default StudentUpdation\n\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const DeleteStudent = async (id, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Delete(q.Ref(q.Collection(\"Students\"),id))\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n","import { DeleteStudent } from \"../../../functions/DeleteStudent\";\nimport Swal from 'sweetalert2'\nasync function StudentDeletion(id) {\n\n    Swal.fire({\n        title: 'Are you sure?',\n        text: \"\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n        if (result.isConfirmed) {\n            DeleteStudent(id, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n            Swal.fire(\n                'Deleted!',\n                'Student has been deleted.',\n                'success'\n            )\n        }\n    })\n\n}\nexport default StudentDeletion","import React, { useState, useEffect } from \"react\";\nimport StudentAddition from \"./api/StudentAddition\";\nimport { useParams } from \"react-router-dom\";\nimport StudentUpdation from \"./api/StudentUpdation\";\nimport StudentDeletion from \"./api/StudentDeletion\";\nimport { List, Avatar, Button, Tooltip } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport spinner from \"../../loader-images/final-uot.gif\";\n\nimport {\n  DeleteOutlined,\n  EditOutlined,\n  UserOutlined,\n  UserAddOutlined,\n} from \"@ant-design/icons\";\nimport { ReadStudent } from \"../../functions/ReadStudent\";\n\nconst Students = () => {\n  let { sname } = useParams();\n\n  //--------------------students Reading-------------------------\n  const [mydata, setData] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadStudent('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setData(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [mydata]);\n  return (\n    <div>\n      <h1>Students</h1>\n      <Button\n        onClick={() => {\n          StudentAddition({ sname });\n        }}\n        type=\"primary\"\n      >\n        Add Student <UserAddOutlined />\n      </Button>\n\n      <br />\n      <br />\n      {!mydata.length ? (\n        <center>\n          <img src={spinner} width={200} height={200} alt='' />\n        </center>\n      ) : (\n        <div>\n          {mydata.map((stData, key) => {\n            if (stData.data.semester === sname){\n              return (\n                <List bordered itemLayout=\"horizontal\">\n                  <List.Item>\n                    <List.Item.Meta\n                      avatar={<Avatar icon={<UserOutlined />} />}\n                      title={stData.data.name}\n                      description={stData.data.roll_n0}\n                      />\n\n                    <span style={{ float: \"right\" }}>\n                      <Tooltip title=\"Edit\">\n                        <Button\n                          type=\"primary\"\n                          onClick={() => {\n                            StudentUpdation(\n                              stData.ref.value.id,\n                              stData.data.semester,\n                              stData.data.name,\n                              stData.data.roll_n0,\n                              stData.data.email,\n                              stData.data.gender\n                            );\n                          }}\n                        >\n                          <EditOutlined />\n                        </Button>\n                      </Tooltip>\n                      &nbsp;\n                      <Tooltip title=\"Delete\">\n                        <Button\n                          type=\"primary\"\n                          danger\n                          onClick={() => {\n                            StudentDeletion(stData.ref.value.id);\n                          }}\n                        >\n                          <DeleteOutlined />\n                        </Button>\n                      </Tooltip>\n                      <Link\n                        to={`/students/${sname}/yourResult/${sname}/${stData.data.roll_n0}`}\n                        params={{ sname: sname, rollN0: stData.data.roll_n0 }}\n                      >\n                        <Tooltip title=\"View Result\">\n                          <Button\n                            type=\"primary\"\n                            style={{ width: \"70%\", marginTop: \"5px\" }}\n                          >\n                          View Results\n                          </Button>\n                        </Tooltip>\n                      </Link>\n                    </span>\n                  </List.Item>\n                </List>\n              );}\n              return(<div></div>)\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Students;\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const AddSubject = async (subject,credit_hours, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Create(\n        q.Collection('Subjects'),\n        { data: { title: subject, credit_hours: credit_hours } },\n      )\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n","import Swal from 'sweetalert2'\nimport { AddSubject } from '../../../functions/AddSubject';\n\nasync function SubjectAddition(sname) {\n  Swal.mixin({\n    input: 'text',\n    confirmButtonText: 'Next &rarr;',\n    showCancelButton: true,\n    progressSteps: ['1', '2']\n  }).queue([\n    {\n      title: 'Subject Title',\n      text: 'Enter Subject Title',\n    },\n    {\n      title: 'Subject Credit-Hours',\n      text: 'Enter Subject Credit-Hours',\n      input: 'number',\n    },\n\n  ]).then((result) => {\n    if (result.value) {\n      console.log(result.value[0])\n      Swal.fire({\n        title: 'All done!',\n        confirmButtonText: 'ok!'\n      })\n      SendData(result.value);\n    }\n  })\n  async function SendData(receive) {\n    console.log(receive);\n    await AddSubject(`${sname}_${receive[0]}`,receive[1],'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n  }\n}\nexport default SubjectAddition;\n","import { DeleteSemester } from \"../../../functions/DeleteSemester\";\n\nasync function SemesterDeletion(id) {\n    console.log(id)\n    await DeleteSemester(id,'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n}\nexport default SemesterDeletion;","import React, { useEffect, useState } from \"react\";\nimport SubjectAddition from \"./api/SubjectAddition\";\nimport SubjectDeletion from \"./api/SubjectDeletion\";\nimport { Button, Row, Col, Card, Tooltip } from \"antd\";\nimport { PlusOutlined,DeleteOutlined } from \"@ant-design/icons\";\nimport { useParams } from \"react-router-dom\";\nimport logo from \"./images/book1.png\";\nimport spinner from \"../../loader-images/final-uot.gif\";\nimport { ReadSubjects } from \"../../functions/ReadSubjects\";\n\nconst { Meta } = Card;\n\nconst Subjects = () => {\n  let { sname } = useParams();\n\n  //--------------------subjects Reading-------------------------\n  const [mydata, setData] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n        ReadSubjects('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n            setData(data)\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [mydata]);\n\n  return (\n    <div>\n      <h1>Subjects of {sname}</h1>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          SubjectAddition(sname);\n        }}\n      >\n        Add Subject <PlusOutlined />\n      </Button>\n      <br />\n      <br />\n      {!mydata.length ? (\n        <center>\n          <img src={spinner} width={200} height={200} alt='' />\n        </center>\n      ) : (\n        \n      <Row gutter={[32, 32]}>\n        {mydata.map((el, key) => {\n          let subject = el.data.title;\n          var res = subject.split(\"_\");\n          console.log(res[0]);\n          if (res[0] === sname) {\n            return (\n              <Col xs={24} sm={24} md={12} lg={6}>\n                <Card\n                  className=\"card\"\n                  hoverable\n                  cover={\n                    <img alt=\"example\" src={logo} height=\"150px\" width=\"40px\" />\n                  }\n                  actions={[\n                    <Tooltip title=\"Delete\">\n                      \n                      <DeleteOutlined\n                        key=\"delete\"\n                        onClick={() => {\n                          SubjectDeletion(el.ref.value.id);\n                        }}\n                      />\n                     &nbsp; Delete\n                    </Tooltip>,\n                  ]}\n                >\n                  <hr />\n                  <Meta\n                    title={res[1]}\n                    description={`${el.data.credit_hours} Credit-Hours`}\n                  />\n                  \n                </Card>\n              </Col>\n            );\n          }\n          return(<div></div>)\n        })}\n      </Row>\n      )}\n    </div>\n  );\n};\n\nexport default Subjects;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { List } from \"antd\";\nimport { FilePdfOutlined } from \"@ant-design/icons\";\nimport spinner from \"../../loader-images/final-uot.gif\";\nimport { ReadSubjects } from \"../../functions/ReadSubjects\";\n\nconst Results = () => {\n  let { sname } = useParams();\n  //-------------------Subjects Reading------------------------\n  const [mydata, setData] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadSubjects('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setData(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [mydata]);\n  return (\n    <div>\n      <h1>Add Results of {sname}</h1>\n      <br />\n      {!mydata.length ? (\n        <center>\n          <img src={spinner} width={200} height={200} alt=''/>\n        </center>\n      ) : (\n        <div>\n          {mydata.map((el, key) => {\n            let subject = el.data.title;\n            var res = subject.split(\"_\");\n            console.log(res[0]);\n            if (res[0] === sname) {\n              return (\n                <List bordered>\n                  <Link\n                    to={`/students/${sname}/results/${sname}/${res[1]}`}\n                    params={{ sname: sname, subj: res[1] }}\n                  >\n                    <List.Item>\n                      <List.Item.Meta\n                        avatar={<FilePdfOutlined />}\n                        title={res[1]}\n                      />\n                    </List.Item>\n                  </Link>\n                </List>\n              );\n            }\n            return(<div></div>)\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Results;\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const AddResult = async (sname, rollN0, subj,credit_hours,Mid,Final,Sessional,total,SubjectGPA, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Create(\n        q.Collection('results'),\n        {\n          data: {\n            semester: sname,\n            rollN0: rollN0,\n            subject: subj,\n            credit_hours: credit_hours,\n            Mid: Mid,\n            Final: Final,\n            Sessional: Sessional,\n            total: total,\n            SubjectGPA: SubjectGPA\n          }\n        },\n      )\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n","import { AddResult } from \"../../../functions/AddResult\";\nimport Swal from 'sweetalert2'\nasync function SubjectResultAddition(sname,rollN0,subj,credit_hours,Mid,Final,Sessional,total,SubjectGPA) {\n    console.log(sname,rollN0,subj,Mid,Final,Sessional,total)\n      // await AddResult(sname,rollN0,subj,credit_hours,Mid,Final,Sessional,total,SubjectGPA,'fnAEBicE1YACCJDo8SR-86vk8cbkY8fn6QEfEik9');\n      AddResult(sname,rollN0,subj,credit_hours,Mid,Final,Sessional,total,SubjectGPA,'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n      Swal.fire(\n        'Added!',\n        'Student Result has been Added.',\n        'success'\n    )\n    }\n  export default SubjectResultAddition;\n  ","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport SubjectResultAddition from './api/SubjectResultAddition';\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport { Button } from 'antd';\nimport { ReadStudent } from '../../functions/ReadStudent';\nimport { ReadSubjects } from '../../functions/ReadSubjects';\nimport { InputNumber } from 'antd';\n\nconst SubjectResultAdd = () => {\n    let { sname } = useParams();\n    let { subj } = useParams();\n    console.log(subj, sname)\n    const [Mid, setMid] = useState();\n    const [Final, setFinal] = useState();\n    const [Sessional, setSessional] = useState();\n\n    //--------------------Students Reading-------------------------\n    const [StudentData, setStudentData] = useState([]);\n    useEffect(() => {\n        async function DataFetch() {\n            ReadStudent('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n                .then((data) => {\n                    setStudentData(data);\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n        }\n        DataFetch();\n    }, [StudentData]);\n    //--------------------subjects Reading-------------------------\n    const [Subjects, setSubjects] = useState([]);\n    useEffect(() => {\n        async function DataFetch() {\n            ReadSubjects('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n                .then((data) => {\n                    setSubjects(data);\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n        }\n        DataFetch();\n    }, [Subjects]);\n\n\n    //-------------------Grading func--------------------------------------\n    function increfn(sname, rollN0, subj, Mid, Final, Sessional, credit_hours) {\n        let total = parseInt(Mid) + parseInt(Final) + parseInt(Sessional);\n        if (total >= 85) {\n            let SubjectGPA = 4.00;\n            SubjectResultAddition(sname, rollN0, subj, credit_hours, Mid, Final, Sessional, total, SubjectGPA);\n        }\n        else if (total >= 80 && total <= 84) {\n            let SubjectGPA = 3.70;\n            SubjectResultAddition(sname, rollN0, subj, credit_hours, Mid, Final, Sessional, total, SubjectGPA);\n        }\n        else if (total >= 75 && total <= 79) {\n            let SubjectGPA = 3.30;\n            SubjectResultAddition(sname, rollN0, subj, credit_hours, Mid, Final, Sessional, total, SubjectGPA);\n        }\n        else if (total >= 70 && total <= 74) {\n            let SubjectGPA = 3.00;\n            SubjectResultAddition(sname, rollN0, subj, credit_hours, Mid, Final, Sessional, total, SubjectGPA);\n        }\n        else if (total >= 65 && total <= 69) {\n            let SubjectGPA = 2.70;\n            SubjectResultAddition(sname, rollN0, subj, credit_hours, Mid, Final, Sessional, total, SubjectGPA);\n        }\n        else if (total >= 61 && total <= 64) {\n            let SubjectGPA = 2.30;\n            SubjectResultAddition(sname, rollN0, subj, credit_hours, Mid, Final, Sessional, total, SubjectGPA);\n        }\n        else if (total >= 58 && total <= 60) {\n            let SubjectGPA = 2.00;\n            SubjectResultAddition(sname, rollN0, subj, credit_hours, Mid, Final, Sessional, total, SubjectGPA);\n        }\n        else if (total >= 53 && total <= 57) {\n            let SubjectGPA = 1.70;\n            SubjectResultAddition(sname, rollN0, subj, credit_hours, Mid, Final, Sessional, total, SubjectGPA);\n        }\n        else if (total >= 50 && total <= 52) {\n            let SubjectGPA = 1.00;\n            SubjectResultAddition(sname, rollN0, subj, credit_hours, Mid, Final, Sessional, total, SubjectGPA);\n        }\n        else if (total < 50) {\n            let SubjectGPA = 0.00;\n            SubjectResultAddition(sname, rollN0, subj, credit_hours, Mid, Final, Sessional, total, SubjectGPA);\n        }\n\n        // SubjectResultAddition(sname, rollN0, subj, Mid, Final, Sessional,total);\n    }\n    return (\n        <div><br />\n            <Table border='2'>\n                <Thead>\n                    <Tr>\n                        <Th>Roll N0</Th>\n                        <Th>Name</Th>\n                        <Th>Subject</Th>\n                      <Th>Mid</Th>\n                      <Th>Final</Th>\n                      <Th>Sessional</Th>\n                        <Th>Submission</Th>\n                    </Tr>\n                </Thead>\n                <Tbody>\n                    {Subjects.map((subjectData, key) => {\n                        let subject = subjectData.data.title;\n                        var res = subject.split(\"_\");\n                        if (res[1] === subj) {\n                            console.log(subjectData.data.credit_hours)\n                            return (\n                                <>\n                                    {StudentData.map((stData, key) => {\n\n                                        if (stData.data.semester === sname) {\n                                            console.log(key)\n                                            return (\n                                                <Tr>\n                                                    <Td>{stData.data.roll_n0}</Td>\n                                                    <Td>{stData.data.name}</Td>\n                                                    <Td>{subj}</Td>\n                                                    <Td style={{ width: '5%' }}><input type='number' style={{ width: '150px' }} placeholder='Enter Mid Marks' onChange={(event) => setMid(event.target.value)}/></Td>\n                                                    <Td style={{ width: '5%'}}> <input type='number' style={{ width: '150px' }} placeholder='Enter Final Marks' onChange={(event) => setFinal(event.target.value)} />  </Td>\n                                                    <Td style={{ width: '5%' }}> <input type='number' style={{ width: '150px' }} placeholder='Enter Sessional Marks' onChange={(event) => setSessional(event.target.value)} />  </Td>\n                                                    <td><center><Button onClick={() => { increfn(sname, stData.data.roll_n0, subj, Mid, Final, Sessional, subjectData.data.credit_hours) }}>Submit</Button></center></td>\n                                                </Tr>\n                                            )\n                                        }\n                                        return (<div></div>)\n                                    })}\n                                </>\n                            )\n                        }\n                        return (<div></div>)\n                    })}\n\n                </Tbody>\n            </Table>\n        </div>\n    )\n\n}\n\nexport default SubjectResultAdd","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const UpdateResult = async (id, mid, final,sessional, total,SubjectGPA, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Update(q.Ref(q.Collection(\"results\"), id),\n        {\n          data: {\n            Mid: mid,\n            Final: final,\n            Sessional: sessional,\n            total: total,\n            SubjectGPA: SubjectGPA\n          }\n        },\n      )\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n\n","import Swal from 'sweetalert2'\nimport { UpdateResult } from '../../../functions/UpdateResult';\nasync function ResultUpdation(id, Mid, Final, Sessional) {\n  Swal.mixin({\n    input: 'text',\n    confirmButtonText: 'Next &rarr;',\n    showCancelButton: true,\n    progressSteps: ['1', '2', '3']\n  }).queue([\n    {\n      title: 'Mid Marks',\n      text: 'Enter Updated Marks',\n      input: 'number',\n      inputValue: Mid\n    },\n    {\n      title: 'Final Marks',\n      text: 'Enter Updated Marks',\n      input: 'number',\n      inputValue: Final\n    },\n    {\n      title: 'Sessional Marks',\n      text: 'Enter Updated Marks ',\n      input: 'number',\n      inputValue: Sessional\n    },\n  ]).then((result) => {\n    if (result.value) {\n      console.log(result.value[0])\n      Swal.fire({\n        title: 'All done!',\n        confirmButtonText: 'ok!'\n      })\n      SendData(result.value);\n    }\n  })\n\n  async function SendData(receive) {\n    console.log(receive);\n    let total = parseInt(receive[0]) + parseInt(receive[1]) + parseInt(receive[2]);\n    if (total >= 85) {\n      let SubjectGPA = 4.00;\n      await UpdateResult(id, receive[0], receive[1], receive[2], total, SubjectGPA, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n    else if (total >= 80 && total <= 84) {\n      let SubjectGPA = 3.70;\n      await UpdateResult(id, receive[0], receive[1], receive[2], total, SubjectGPA, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n    else if (total >= 75 && total <= 79) {\n      let SubjectGPA = 3.30;\n      await UpdateResult(id, receive[0], receive[1], receive[2], total, SubjectGPA, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n    else if (total >= 70 && total <= 74) {\n      let SubjectGPA = 3.00;\n      await UpdateResult(id, receive[0], receive[1], receive[2], total, SubjectGPA, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n    else if (total >= 65 && total <= 69) {\n      let SubjectGPA = 2.70;\n      await UpdateResult(id, receive[0], receive[1], receive[2], total, SubjectGPA, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n    else if (total >= 61 && total <= 64) {\n      let SubjectGPA = 2.30;\n      await UpdateResult(id, receive[0], receive[1], receive[2], total, SubjectGPA, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n    else if (total >= 58 && total <= 60) {\n      let SubjectGPA = 2.00;\n      await UpdateResult(id, receive[0], receive[1], receive[2], total, SubjectGPA, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n    else if (total >= 53 && total <= 57) {\n      let SubjectGPA = 1.70;\n      await UpdateResult(id, receive[0], receive[1], receive[2], total, SubjectGPA, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n    else if (total >= 50 && total <= 52) {\n      let SubjectGPA = 1.00;\n      await UpdateResult(id, receive[0], receive[1], receive[2], total, SubjectGPA, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n    else if (total < 50) {\n      let SubjectGPA = 0.00;\n      await UpdateResult(id, receive[0], receive[1], receive[2], total, SubjectGPA, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n    }\n  }\n\n}\nexport default ResultUpdation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const DeleteResult = async (id, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Delete(q.Ref(q.Collection(\"results\"),id))\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n\n\n","import { DeleteResult } from \"../../../functions/DeleteResult\";\n\nasync function ResultDeletion(id) {\n    console.log(id)\n    await DeleteResult (id,'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n}\nexport default ResultDeletion;","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const ReadResult = async (secret) => {\n  try {\n    var client = new faunadb.Client({ secret });\n    var result = await client.query(\n      q.Map(\n        q.Paginate(q.Documents(q.Collection(\"results\"))),\n        q.Lambda(x => q.Get(x))\n      )\n    );\n\n    return result.data\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\";\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\nimport { Card, Row, Col } from \"antd\";\nimport { Button, Tooltip } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport ResultUpdation from \"./api/ResultUpdation\";\nimport ResultDeletion from \"./api/ResultDeletion\";\nimport { ReadResult } from \"../../functions/ReadResult\";\n\nconst ResultReading = () => {\n  let { sname } = useParams();\n  let { rollN0 } = useParams();\n  let gpa = 0;\n  let Total_credit_hours = 0;\n  //--------------------students Reading-------------------------\n  const [mydata, setData] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadResult('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setData(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [mydata]);\n\n  //----------------------GPA Calculation----------------------------------\n  {\n    mydata.map((rsData, key) => {\n      let lastSem = sname.split(\"-\");\n      console.log(lastSem[2] - 1);\n      let semN0 = lastSem[2] - 1;\n      lastSem = `${lastSem[0]}-${lastSem[1]}-${semN0}`;\n      console.log(lastSem);\n\n      if (rollN0 === rsData.data.rollN0 && lastSem === rsData.data.semester) {\n        gpa = gpa + rsData.data.SubjectGPA * rsData.data.credit_hours;\n        Total_credit_hours =\n          Total_credit_hours + parseInt(rsData.data.credit_hours);\n      }\n      return <div></div>;\n    });\n  }\n  console.log(gpa, Total_credit_hours);\n  let Total_GPA = gpa / Total_credit_hours;\n  console.log(Total_GPA.toFixed(2));\n  //----------------------------------------------------------------------\n\n  return (\n    <div>\n      <Row gutter={[32, 32]}>\n        {/*------------------ Current Semester Result------------------------ */}\n\n        <Col xs={24} sm={12} md={12} lg={24}>\n          <Card className=\"card\">\n            <center>\n              {\" \"}\n              <h3>Current Results</h3>{\" \"}\n            </center>\n            <Table border=\"1\">\n              <Thead>\n                <Tr>\n                  <Th>Semester</Th>\n                  <Th>Subject</Th>\n                  <Th>Credit-Hours</Th>\n                  <Th>Mid</Th>\n                  <Th>Final</Th>\n                  <Th>Sessional</Th>\n                  <Th>Total</Th>\n                  <Th>Subject GPA</Th>\n                  <Th>Actions</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {mydata.map((rsData, key) => {\n                  if (\n                    rollN0 === rsData.data.rollN0 &&\n                    sname === rsData.data.semester\n                  ) {\n                    // console.log(rsData.data.SubjectGPA*rsData.data.credit_hours);\n                    return (\n                      <Tr>\n                        <Td>{rsData.data.semester}</Td>\n                        <Td>{rsData.data.subject}</Td>\n                        <Td>{rsData.data.credit_hours}</Td>\n                        <Td>{rsData.data.Mid}</Td>\n                        <Td>{rsData.data.Final}</Td>\n                        <Td>{rsData.data.Sessional}</Td>\n                        <Td>{rsData.data.total}</Td>\n                        <Td>{rsData.data.SubjectGPA}</Td>\n                        <Td>\n                          <Tooltip title=\"Edit\">\n                            <Button\n                              onClick={() => {\n                                ResultUpdation(\n                                  rsData.ref.value.id,\n                                  rsData.data.Mid,\n                                  rsData.data.Final,\n                                  rsData.data.Sessional\n                                );\n                              }}\n                            >\n                              <EditOutlined />\n                            </Button>\n                          </Tooltip>\n                          <Tooltip title=\"Delete\">\n                            <Button\n                              onClick={() => {\n                                ResultDeletion(rsData.ref.value.id);\n                              }}\n                            >\n                              <DeleteOutlined />\n                            </Button>\n                          </Tooltip>\n                        </Td>\n                      </Tr>\n                    );\n                  }\n                  return <div></div>;\n                })}\n              </Tbody>\n            </Table>\n          </Card>\n        </Col>\n      </Row>\n      {/*------------------ Last Semester Result------------------------ */}\n      <Row>\n        <Col xs={24} sm={12} md={12} lg={24}>\n          <Card className=\"card\">\n            <center>\n              {\" \"}\n              <h3>Last Semester Result</h3>{\" \"}\n            </center>\n            <Table border=\"1\">\n              <Thead>\n                <Tr>\n                  <Th>Semester</Th>\n                  <Th>Subject</Th>\n                  <Th>Credit-Hours</Th>\n                  <Th>Mid</Th>\n                  <Th>Final</Th>\n                  <Th>Sessional</Th>\n                  <Th>Total</Th>\n                  <Th>Subject GPA</Th>\n                  <Th>Actions</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {mydata.map((rsData, key) => {\n                  let lastSem = sname.split(\"-\");\n                  let semN0 = lastSem[2] - 1;\n                  lastSem = `${lastSem[0]}-${lastSem[1]}-${semN0}`;\n\n                  // let SubsemN0 = res[0].split(\"-\");\n                  // console.log(SubsemN0[2])\n                  if (\n                    rollN0 === rsData.data.rollN0 &&\n                    lastSem === rsData.data.semester\n                  ) {\n                    console.log(\n                      rsData.data.SubjectGPA * rsData.data.credit_hours\n                    );\n                    return (\n                      <Tr>\n                        <Td>{rsData.data.semester}</Td>\n                        <Td>{rsData.data.subject}</Td>\n                        <Td>{rsData.data.credit_hours}</Td>\n                        <Td>{rsData.data.Mid}</Td>\n                        <Td>{rsData.data.Final}</Td>\n                        <Td>{rsData.data.Sessional}</Td>\n                        <Td>{rsData.data.total}</Td>\n                        <Td>{rsData.data.SubjectGPA}</Td>\n                        <Td>\n                          <Tooltip title=\"Edit\">\n                            <Button\n                              onClick={() => {\n                                ResultUpdation(\n                                  rsData.ref.value.id,\n                                  rsData.data.Mid,\n                                  rsData.data.Final,\n                                  rsData.data.Sessional\n                                );\n                              }}\n                            >\n                              <EditOutlined />\n                            </Button>\n                          </Tooltip>\n                          <Tooltip title=\"Delete\">\n                            <Button\n                              onClick={() => {\n                                ResultDeletion(rsData.ref.value.id);\n                              }}\n                            >\n                              <DeleteOutlined />\n                            </Button>\n                          </Tooltip>\n                        </Td>\n                      </Tr>\n                    );\n                  }\n                  return <div></div>;\n                })}\n              </Tbody>\n            </Table>\n            <br />\n            <center>\n              <h3>GPA: {Total_GPA.toFixed(2)}</h3>\n            </center>\n            {/*------------------ All Result------------------------ */}\n            <center>\n              <Col xs={24} sm={12} md={12} lg={6}>\n                <Link\n                  to={`/students/${sname}/yourResult/${sname}/${rollN0}/AllDegreeResult`}\n                >\n                  <Card className=\"card\">\n                    <center>\n                      {\" \"}\n                      <h3>View All Semesters Result</h3>{\" \"}\n                    </center>\n                  </Card>\n                </Link>\n              </Col>\n            </center>\n          </Card>\n        </Col>\n        <br />\n        <br />\n      </Row>\n    </div>\n  );\n};\n\nexport default ResultReading;\n","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport { Card, Row, Col } from \"antd\";\nimport { Button, Tooltip } from \"antd\";\nimport {\n  DeleteOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport ResultUpdation from './api/ResultUpdation';\nimport ResultDeletion from './api/ResultDeletion';\nimport { ReadResult } from '../../functions/ReadResult';\n\n\nconst AllSemesterResult = () => {\n  let { rollN0 } = useParams();\n  let { sname } = useParams();\n  let gpa = 0;\n  let Total_credit_hours = 0;\n  //--------------------students Reading-------------------------\n  const [mydata, setData] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadResult('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setData(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [mydata]);\n  //----------------------CGPA Calculation----------------------------------\n  {\n    mydata.map((rsData, key) => {\n      if (rollN0 === rsData.data.rollN0 && sname !== rsData.data.semester) {\n        gpa = gpa + rsData.data.SubjectGPA * rsData.data.credit_hours;\n        Total_credit_hours = Total_credit_hours + parseInt(rsData.data.credit_hours);\n      }\n      return (<div></div>)\n    })\n  }\n  console.log(gpa, Total_credit_hours)\n  let Total_CGPA = gpa / Total_credit_hours;\n  console.log(Total_CGPA.toFixed(2))\n  //---------------------------------------------------------------------- \n\n  return (\n    <div>\n      <Row gutter={[32, 32]}>\n        {/*------------------ All Result------------------------ */}\n        <Col xs={24} sm={12} md={12} lg={24}>\n          <Card className=\"card\">\n            <center> <h3>All Semesters Result</h3> </center>\n            <Table border='1'>\n              <Thead>\n                <Tr>\n                  <Th>Semester</Th>\n                  <Th>Subject</Th>\n                  <Th>Credit-Hours</Th>\n                  <Th>Mid</Th>\n                  <Th>Final</Th>\n                  <Th>Sessional</Th>\n                  <Th>Total</Th>\n                  <Th>Subject GPA</Th>\n                  <Th>Actions</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {mydata.map((rsData, key) => {\n                  if (rollN0 === rsData.data.rollN0 && sname !== rsData.data.semester) {\n                    return (\n                      <Tr>\n                        <Td>{rsData.data.semester}</Td>\n                        <Td>{rsData.data.subject}</Td>\n                        <Td>{rsData.data.credit_hours}</Td>\n                        <Td>{rsData.data.Mid}</Td>\n                        <Td>{rsData.data.Final}</Td>\n                        <Td>{rsData.data.Sessional}</Td>\n                        <Td>{rsData.data.total}</Td>\n                        <Td>{rsData.data.SubjectGPA}</Td>\n                        <Td>\n                          <Tooltip title=\"Edit\"><Button onClick={() => { ResultUpdation(rsData.ref.value.id, rsData.data.Mid, rsData.data.Final, rsData.data.Sessional) }}><EditOutlined /></Button></Tooltip>\n                          <Tooltip title=\"Delete\"><Button onClick={() => { ResultDeletion(rsData.ref.value.id) }}><DeleteOutlined /></Button></Tooltip>\n                        </Td>\n                      </Tr>\n                    )\n                  }\n                  return (<div></div>)\n                })}\n              </Tbody>\n            </Table>\n            <br />\n            <center>\n              <h3>CGPA: {Total_CGPA.toFixed(2)}</h3>\n            </center>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default AllSemesterResult\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link, Route, Routes } from \"react-router-dom\";\nimport Students from \"./Students\";\nimport Subjects from \"./Subjects\";\nimport Results from \"./Results\";\nimport SubjectResultAdd from \"./SubjectResultAdd\";\nimport ResultReading from \"./ResultReading\";\nimport { Menu } from \"antd\";\nimport {\n  PieChartOutlined,\n  ProfileOutlined,\n  TeamOutlined,\n} from \"@ant-design/icons\";\nimport AllSemesterResult from \"./AllSemesterResult\";\nimport './Dashboard.css'\n\nconst Tabs = () => {\n  let { sname } = useParams();\n\n  return (\n    <Menu\n      defaultSelectedKeys={[\"1\"]}\n      style={{ backgroundColor: \"#eff0f3\", textAlign: \"center\" }}\n      mode=\"horizontal\"\n    >\n      <Menu.Item key=\"1\" icon={<TeamOutlined />} className='size'>\n        <Link to={`/students/${sname}`} className=\"menu-item\">\n          Students\n        </Link>\n      </Menu.Item>\n      <Menu.Item key=\"2\" icon={<ProfileOutlined />} className='size'>\n        <Link to={`/students/${sname}/subjects/${sname}`} className=\"menu-item\">\n          Subjects\n        </Link>\n      </Menu.Item>\n      <Menu.Item key=\"3\" icon={<PieChartOutlined />} className='size'>\n        <Link to={`/students/${sname}/results/${sname}`} className=\"menu-item\">\n         Add Results\n        </Link>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <br/>\n      <Tabs />\n      <div className=\"container-fluid\">\n        <br />\n        <Routes>\n          <Route name=\"students\" path=\"/\" element={<Students />} exact />\n          <Route\n            name=\"subjects\"\n            path=\"subjects/:sname\"\n            element={<Subjects />}\n            exact\n          />\n          <Route\n            name=\"results\"\n            path=\"results/:sname\"\n            element={<Results />}\n            exact\n          />\n          <Route\n            name=\"SubjectResultAdd\"\n            path=\"results/:sname/:subj\"\n            element={<SubjectResultAdd />}\n            exact\n          />\n          <Route\n            name=\"ResultReading\"\n            path=\"yourResult/:sname/:rollN0\"\n            element={<ResultReading />}\n            exact\n          />\n           <Route\n            name=\"AllDegreeresult\"\n            path=\"yourResult/:sname/:rollN0/AllDegreeresult\"\n            element={<AllSemesterResult />}\n            exact\n          />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const DeleteComplaint = async (id, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Delete(q.Ref(q.Collection(\"Complaints\"),id))\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n","import { DeleteComplaint } from \"../../../functions/DeleteComplaint\";\nasync function ComplaintDeletion(id) {\n    await DeleteComplaint(id,'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n}\nexport default ComplaintDeletion","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const ReadComplaints = async (secret) => {\n  try {\n    var client = new faunadb.Client({ secret });\n    var result = await client.query(\n      q.Map(\n        q.Paginate(q.Documents(q.Collection(\"Complaints\"))),\n        q.Lambda(x => q.Get(x))\n      )\n    );\n\n    return result.data\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n","import React, { useEffect, useState } from 'react'\nimport { Card, Row, Col } from \"antd\";\nimport '../../../App.css'\nimport ComplaintDeletion from './api/ComplaintDeletion';\nimport { ReadComplaints } from '../../functions/ReadComplaints';\n\nconst ComplaintBox = () => {\n    //--------------------Complaints Reading-------------------------\n    const [Complaints, setComplaints] = useState([]);\n    useEffect(() => {\n        async function DataFetch() {\n            ReadComplaints('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n            .then((data) => {\n                setComplaints(data)\n            })\n            .catch((error) => {\n              console.log(error)\n            })\n        }\n        DataFetch();\n      }, [Complaints]);\n\n    return (\n        <div>\n            <div className=\"container-fluid\">\n                <br /><br />\n                <center><h2>Submitted Complaints</h2></center>\n                <br />\n                <Row gutter={[32, 32]}>\n                    <Col xs={24} sm={12} md={12} lg={24}>\n                        {Complaints.map((complaint) => {\n                            return (\n                                <Card className=\"card\">\n                                    <p> <strong>Name:</strong> <span style={{ fontStyle: 'italic' }}>{complaint.data.StudentName}</span> </p>\n                                    <p>  <strong>Title:</strong> <span style={{ fontStyle: 'italic' }}>{complaint.data.title}</span> </p>\n                                    <p><strong>Complaint:</strong> {complaint.data.description}</p>\n                                    <button style={{ float: 'right' }} onClick={() => { ComplaintDeletion(complaint.ref.value.id) }}>delete</button> \n                                </Card>\n                            )\n                            return (<div></div>)\n                        })}\n                    </Col>\n                </Row>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ComplaintBox\n","import React from \"react\";\nimport '../App.css'\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Menubar from \"./IT-Admin-Side/components/Menu\";\nimport Semester from \"./IT-Admin-Side/pages/Semester\";\nimport Programs from \"./IT-Admin-Side/pages/Programs\";\nimport Dashboard from \"./IT-Admin-Side/pages/Dashboard\";\nimport ComplaintBox from \"./IT-Admin-Side/pages/ComplaintBox\";\n\n\nconst ItAdmin = () => {\n  return (\n    <div>\n\n      <Router>\n        <Menubar />\n        <Routes>\n          <Route path=\"/\" element={<Programs />} exact />\n          <Route path=\"/complaints\" element={<ComplaintBox />} exact />\n          <Route\n            name=\"semester\"\n            path=\"/semester/:pname\"\n            element={<Semester />}\n            exact\n          />\n          <Route\n            name=\"students\"\n            path=\"/students/:sname/*\"\n            element={<Dashboard />}\n            exact\n          />\n\n        </Routes>\n      </Router>\n    </div>\n  );\n};\n\nexport default ItAdmin;\n","import React from \"react\";\nimport { useAuth0 } from '@auth0/auth0-react'\nimport faunadb, { query as q } from \"faunadb\";\nimport \"./Navbar.css\";\nimport {\n  LogoutOutlined,\n} from \"@ant-design/icons\";\nimport logo from \"./uot.png\";\n\n\n\nconst Navbar = () => {\n  //-------------Database logout user session----------------\n  const { logout, user } = useAuth0();\n  const handleLogout = () => {\n    const client = new faunadb.Client({\n      secret: user[\"https://fauna.com/user_metadata\"].secret,\n    });\n    client.query(q.Logout(true));\n    logout();\n  };\n\n  return (\n    <div className=\"top-nav\">\n      <ul>\n        <li style={{ fontSize: \"20px\", fontFamily: 'Akaya Telivigala' }}>\n          <img src={logo} alt=\"logo\" width={60} height={60} />\n          <br />\n          University Of Thal\n        </li>\n        <li className=\"user\" style={{ cursor: 'pointer' }}>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href='#'\n            onClick={handleLogout}\n\n          >\n            <LogoutOutlined />Logout\n      </a>\n        </li>\n\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { useAuth0 } from \"@auth0/auth0-react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"react-super-responsive-table\";\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\nimport { Card, Row, Col } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { ReadStudent } from '../../functions/ReadStudent';\nimport { ReadResult } from '../../functions/ReadResult';\n\nconst Result = () => {\n  const { user } = useAuth0();\n  const { email } = user;\n  console.log(email);\n\n  let gpa = 0;\n  let Total_credit_hours = 0;\n\n  //--------------------students Reading-------------------------\n  //--------------------students Reading-------------------------\n  const [Students, setStudents] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadStudent('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setStudents(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [Students]);\n  //--------------------Results Reading-------------------------\n  const [Result, setResult] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadResult('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setResult(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [Result]);\n  //----------------------GPA Calculation----------------------------------\n  {\n    Students.map((student) => {\n      if (student.data.email === email) {\n        return (\n          <>\n            {Result.map((rsData, key) => {\n              let sname = student.data.semester;\n              let lastSem = sname.split(\"-\");\n              console.log(lastSem[2] - 1);\n              let semN0 = lastSem[2] - 1;\n              lastSem = `${lastSem[0]}-${lastSem[1]}-${semN0}`;\n              console.log(lastSem);\n              if (\n                student.data.roll_n0 === rsData.data.rollN0 &&\n                lastSem === rsData.data.semester\n              ) {\n                gpa = gpa + rsData.data.SubjectGPA * rsData.data.credit_hours;\n                Total_credit_hours =\n                  Total_credit_hours + parseInt(rsData.data.credit_hours);\n              }\n              return <div></div>;\n            })}\n          </>\n        );\n      }\n      return <div></div>;\n    });\n  }\n  console.log(gpa, Total_credit_hours);\n  let Total_GPA = gpa / Total_credit_hours;\n  console.log(Total_GPA.toFixed(2));\n  //----------------------------------------------------------------------\n\n  return (\n    <div>\n      <br />\n      <br />\n      <Row gutter={[32, 32]}>\n        {/*------------------ Last Semester Result------------------------ */}\n\n        <Col xs={24} sm={12} md={12} lg={24}>\n          <Card className=\"card\">\n            <center>\n              {\" \"}\n              <h3> Result Sheet</h3>{\" \"}\n            </center>\n            {Students.map((student) => {\n              if (student.data.email === email) {\n                return (\n                  <>\n                    <Table border=\"1\">\n                      <Thead>\n                        <Tr>\n                          <Th>Semester</Th>\n                          <Th>Subject</Th>\n                          <Th>Credit-Hours</Th>\n                          <Th>Mid</Th>\n                          <Th>Final</Th>\n                          <Th>Sessional</Th>\n                          <Th>Total</Th>\n                          <Th>Subject GPA</Th>\n                        </Tr>\n                      </Thead>\n                      <Tbody>\n                        {Result.map((rsData, key) => {\n                          let sname = student.data.semester;\n                          let lastSem = sname.split(\"-\");\n                          console.log(lastSem[2] - 1);\n                          let semN0 = lastSem[2] - 1;\n                          lastSem = `${lastSem[0]}-${lastSem[1]}-${semN0}`;\n                          console.log(lastSem);\n\n                          // let SubsemN0 = res[0].split(\"-\");\n                          // console.log(SubsemN0[2])\n                          if (\n                            student.data.roll_n0 === rsData.data.rollN0 &&\n                            lastSem === rsData.data.semester\n                          ) {\n                            return (\n                              <Tr>\n                                <Td>{rsData.data.semester}</Td>\n                                <Td>{rsData.data.subject}</Td>\n                                <Td>{rsData.data.credit_hours}</Td>\n                                <Td>{rsData.data.Mid}</Td>\n                                <Td>{rsData.data.Final}</Td>\n                                <Td>{rsData.data.Sessional}</Td>\n                                <Td>{rsData.data.total}</Td>\n                                <Td>{rsData.data.SubjectGPA}</Td>\n                              </Tr>\n                            );\n                          }\n                          return <div></div>;\n                        })}\n                      </Tbody>\n                    </Table>\n                  </>\n                );\n              }\n              return <div></div>;\n            })}\n            <br />\n            <center>\n              <h3>GPA: {Total_GPA.toFixed(2)}</h3>\n            </center>\n            {/*------------------ All Result------------------------ */}\n            <center>\n              <Col xs={24} sm={12} md={12} lg={6}>\n                <Link to=\"/AllDegreeResult\">\n                  <Card className=\"card\">\n                    <center>\n                      {\" \"}\n                      <h3>View All Semesters Result</h3>{\" \"}\n                    </center>\n                  </Card>\n                </Link>\n              </Col>\n            </center>\n          </Card>\n        </Col>\n\n        {/*------------------ All Result------------------------ */}\n\n      </Row>\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"../../IT-Admin-Side/TimeTable/firebase\";\nimport { v4 as uuid } from \"uuid\";\n\nexport default function UploadImage() {\n  const [imageUrl, setImageUrl] = useState([]);\n\n  const getImageUrl = () => {\n    const imageRef = firebase.database().ref(\"table\").child(\"daily\");\n    imageRef.on(\"value\", (snapshot) => {\n      const imageUrls = snapshot.val();\n      const urls = [];\n      for (let id in imageUrls) {\n        urls.push({ id, url: imageUrls[id] });\n      }\n      const newState = [...imageUrl, ...urls];\n      setImageUrl(newState);\n    });\n  };\n  \n  useEffect(() => {\n    getImageUrl();\n  }, []);\n\n  console.log(imageUrl.length)\n  return (\n    <div>\n      <h2>TimeTable</h2>\n   \n      {imageUrl\n        ? imageUrl.map(({ id, url }) => {\n            return (\n              <div key={id}>\n                <iframe src={url} alt=\"loading\" width='100%' height='400px'\n                frameBorder=\"0\" />\n                \n              </div>\n            );\n          })\n        : ''}\n    </div>\n  );\n}\n","import React from 'react';\nimport {List} from 'antd'\n\nexport default function Todo({ todo }) {\n  return (\n    <div>\n      <br/>\n      <List>{todo.title}</List>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport firebase from \"../../IT-Admin-Side/TimeTable/firebase\";\nimport Todo from './Todo';\n\nexport default function TodoList() {\n  const [todoList, setTodoList] = useState();\n\n  useEffect(() => {\n    const todoRef = firebase.database().ref('Todo');\n    todoRef.on('value', (snapshot) => {\n      const todos = snapshot.val();\n      const todoList = [];\n      for (let id in todos) {\n        todoList.push({ id, ...todos[id] });\n      }\n      setTodoList(todoList);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h3 style={{fontStyle:'italic'}}>Notifications:</h3>\n      <hr/>\n      {todoList\n        ? todoList.map((todo, index) => <Todo todo={todo} key={index} />)\n        : ''}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react'\nimport UploadImage from '../TimeTable/UploadImage'\nimport { Row, Col, Card } from 'antd'\nimport '../../../App.css'\nimport TodoList from '../TimeTable/TodoList'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport { ReadStudent } from '../../functions/ReadStudent'\nimport { ReadSubjects } from '../../functions/ReadSubjects'\n\n\nconst Dashboard = () => {\n    const { user } = useAuth0();\n    const { email } = user;\n    console.log(email)\n\n    //--------------------students Reading-------------------------\n    const [Students, setStudents] = useState([]);\n    useEffect(() => {\n        async function DataFetch() {\n            ReadStudent('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n                .then((data) => {\n                    setStudents(data);\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n        }\n        DataFetch();\n    }, [Students]);\n    //--------------------subjects Reading-------------------------\n    const [Subjects, setSubjects] = useState([]);\n    useEffect(() => {\n        async function DataFetch() {\n            ReadSubjects('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n                .then((data) => {\n                    setSubjects(data);\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n        }\n        DataFetch();\n    }, [Subjects]);\n\n    return (\n        <div className='container-fluid'>\n            <br />\n            <br />\n            <Row gutter={[32, 32]}>\n                {Students.map((student) => {\n                    if (student.data.email === email) {\n                        if (!Subjects.length) {\n                            console.log('Subjects empty')\n                        }\n                        else {\n                            return (<>\n                                {Subjects.map((subjects) => {\n                                    let subject = subjects.data.title;\n                                    var res = subject.split(\"_\");\n                                    if (res[0] === student.data.semester) {\n                                        return (\n                                            <Col xs={24} sm={12} md={8} lg={4}>\n                                                <Card className=\"card\">\n                                                    <h3>{res[1]}</h3>\n                                                    <h4>Credit-Hours: {subjects.data.credit_hours}</h4>\n                                                </Card>\n                                            </Col>\n                                        )\n                                    }\n                                    return (<div></div>)\n                                })}\n\n                            </>)\n                        }\n                    }\n                    return (<div></div>)\n                })}\n\n                <br />\n                <br />\n                <Col xs={24} sm={12} md={12} lg={18}>\n                    <Card className=\"card\">\n                        <UploadImage />\n                    </Card>\n                </Col>\n\n                <Col xs={24} sm={12} md={12} lg={6}>\n                    <Card className=\"card\">\n                        <TodoList />\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import { useAuth0 } from '@auth0/auth0-react';\nimport React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport { Card, Row, Col } from \"antd\";\nimport { ReadStudent } from '../../functions/ReadStudent';\nimport { ReadResult } from '../../functions/ReadResult';\n\nconst AllSemesterResult = () => {\n  const { user } = useAuth0();\n  const { email } = user;\n  console.log(email)\n  let gpa = 0;\n  let Total_credit_hours = 0;\n  //--------------------students Reading-------------------------\n  const [Students, setStudents] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadStudent('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setStudents(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [Students]);\n  //--------------------Results Reading-------------------------\n    const [Result, setResult] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadResult('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setResult(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [Result]);\n  //----------------------CGPA Calculation----------------------------------\n  {\n    Students.map((student) => {\n      if (student.data.email === email) {\n        return (\n          <>\n            {Result.map((rsData, key) => {\n              if (student.data.roll_n0 === rsData.data.rollN0 && student.data.semester !== rsData.data.semester) {\n                gpa = gpa + rsData.data.SubjectGPA * rsData.data.credit_hours;\n                Total_credit_hours = Total_credit_hours + parseInt(rsData.data.credit_hours);\n              }\n              return (<div></div>)\n            })}\n          </>\n        )\n      }\n      return (<div></div>)\n    })\n  }\n    console.log(gpa, Total_credit_hours)\n    let Total_CGPA = gpa / Total_credit_hours;\n    console.log(Total_CGPA.toFixed(2))\n    //---------------------------------------------------------------------- \n  \n\n  return (\n    <div>\n      <br />\n      <br />\n      <Row gutter={[32, 32]}>\n        {/*------------------ All Semester Result------------------------ */}\n\n        <Col xs={24} sm={12} md={12} lg={24}>\n          <Card className=\"card\">\n            <center> <h3>All Semester Results</h3> </center>\n            {Students.map((student) => {\n              if (student.data.email === email) {\n                return (\n                  <>\n                    <Table border='1'>\n                      <Thead>\n                        <Tr>\n                          <Th>Semester</Th>\n                          <Th>Subject</Th>\n                          <Th>Credit-Hours</Th>\n                          <Th>Mid</Th>\n                          <Th>Final</Th>\n                          <Th>Sessional</Th>\n                          <Th>Total</Th>\n                          <Th>Subject GPA</Th>\n                        </Tr>\n                      </Thead>\n                      <Tbody>\n                        {Result.map((rsData, key) => {\n                          console.log(student.data.roll_n0, rsData.data.rollN0)\n                          if (student.data.roll_n0 === rsData.data.rollN0 && student.data.semester !== rsData.data.semester) {\n                            return (\n                              <Tr>\n                                <Td>{rsData.data.semester}</Td>\n                                <Td>{rsData.data.subject}</Td>\n                                <Td>{rsData.data.credit_hours}</Td>\n                                <Td>{rsData.data.Mid}</Td>\n                                <Td>{rsData.data.Final}</Td>\n                                <Td>{rsData.data.Sessional}</Td>\n                                <Td>{rsData.data.total}</Td>\n                                <Td>{rsData.data.SubjectGPA}</Td>\n                              </Tr>\n                            )\n                          }\n                          return (<div></div>)\n                        })}\n                      </Tbody>\n                    </Table>\n                  </>\n                )\n              }\n              return (<div></div>)\n            })}\n             <br />\n            <center>\n              <h3>CGPA: {Total_CGPA.toFixed(2)}</h3>\n            </center>\n          </Card>\n        </Col>\n      </Row>\n\n\n    </div>\n  )\n}\n\nexport default AllSemesterResult\n","const faunadb = require('faunadb'),\n  q = faunadb.query;\nvar dotenv = require('dotenv');\ndotenv.config();\nexport const AddComplaint = async (StudentName, email, Title, Description, secret) => {\n\n  try {\n    var adminClient = new faunadb.Client({ secret });\n\n    const result = await adminClient.query(\n      q.Create(\n        q.Collection('Complaints'),\n        { data: { StudentName: StudentName, email: email, title: Title, description: Description } },\n      )\n    )\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: result.ref.id }),\n    }\n  } catch (err) {\n    return { statusCode: 500, body: err.toString() }\n  }\n};\n\n\n\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { useAuth0 } from '@auth0/auth0-react'\nimport Swal from 'sweetalert2'\n\nimport { Input } from \"antd\";\nimport { Col, Card } from 'antd'\n\nimport { Button } from 'antd';\nimport { ReadStudent } from \"../../functions/ReadStudent\";\nimport { AddComplaint } from \"../../functions/AddComplaint\";\nconst { TextArea } = Input;\n\nconst Complaint = () => {\n  const [Name, setName] = useState('');\n  const [Title, setTitle] = useState();\n  const [Description, setDescription] = useState();\n  const { user } = useAuth0();\n  const { email } = user;\n\n  //--------------------students Reading-------------------------\n  const [Students, setStudents] = useState([]);\n  useEffect(() => {\n    async function DataFetch() {\n      ReadStudent('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n        .then((data) => {\n          setStudents(data);\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n    DataFetch();\n  }, [Students]);\n\n  //-----------------------------------------------------------\n  async function ComplaintSubmission(Name, email, Title, Description) {\n    console.log(Name, email, Title, Description)\n    {\n      Students.map((student) => {\n        if (student.data.email === email) {\n          if (student.data.name.toLowerCase() === Name.toLowerCase() || Name === '' || Name === undefined) {\n            if (Title === undefined || Title === \"\" || Description === undefined || Description === \"\") {\n              Swal.fire(\n                '',\n                'Empty Complain!',\n                'question'\n              )\n            }\n            else {\n              AddComplaint(Name, email, Title, Description, 'fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU');\n              Swal.fire(\n                '',\n                'Complaint Submitted',\n                'success'\n              )\n            }\n          }\n          else {\n            Swal.fire(\n              '',\n              'You did not enter your Name!',\n              'warning'\n            )\n          }\n        }\n      })\n    }\n\n  }\n\n\n\n  return (\n    <div style={{ marginRight: \"auto\", marginLeft: \"auto\", marginTop: \"50px\", maxWidth: \"800px\" }}>\n      <Col xs={24} sm={24} md={24} lg={24}>\n        <Card\n          className=\"card\"\n          style={{}}\n        >\n          <h3>Name</h3>\n          <Input placeholder=\"(optional)\" onChange={(event) => setName(event.target.value)} />\n          <br></br>\n          <br></br>\n          <h3>Title</h3>\n          <Input placeholder=\"Add Title\" onChange={(event) => setTitle(event.target.value)} />\n          <br></br>\n          <br></br>\n          <h3>Description</h3>\n          <TextArea placeholder=\"Add Description\" rows={4} onChange={(event) => setDescription(event.target.value)} />\n          <br></br>\n          <br></br>\n          <Button type=\"primary\" block onClick={() => { ComplaintSubmission(Name, email, Title, Description) }}>Submit</Button>\n        </Card>\n      </Col>\n    </div>\n  );\n};\n\nexport default Complaint;\n","import React, { useEffect, useState } from 'react'\nimport { useAuth0 } from '@auth0/auth0-react'\nimport { Card, Row, Col } from \"antd\";\nimport '../../../App.css'\nimport { ReadComplaints } from '../../functions/ReadComplaints';\n\nconst SubmittedComplaints = () => {\n    const { user } = useAuth0();\n    const { email } = user;\n\n    //--------------------Complaints Reading-------------------------\n    const [Complaints, setComplaints] = useState([]);\n    useEffect(() => {\n        async function DataFetch() {\n            ReadComplaints('fnAEEvS5qAACCj0sg3LN6t3QLKrNRq7I4sChNJhU')\n                .then((data) => {\n                    setComplaints(data);\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n        }\n        DataFetch();\n    }, [Complaints]);\n\n    return (\n        <div className=\"container-fluid\">\n            <br /><br />\n            <center><h2>Submitted Complaints</h2></center>\n            <br />\n            <Row gutter={[32, 32]}>\n                <Col xs={24} sm={12} md={12} lg={24}>\n                    {Complaints.map((complaints) => {\n                        if (complaints.data.email === email) {\n                            return (\n                                <Card className=\"card\">\n                                    <p> <strong style={{ fontSize: '15px' }}>Name:</strong> <span style={{ fontStyle: 'italic' }}>{complaints.data.StudentName}</span> </p>\n                                    <p>  <strong style={{ fontSize: '15px' }}>Title:</strong> <span style={{ fontStyle: 'italic' }}>{complaints.data.title}</span> </p>\n                                    <p><strong>Complaint:</strong>{complaints.data.description}</p>\n                                </Card>\n                            )\n                        }\n                        return (<div></div>)\n                    })}\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\n\nexport default SubmittedComplaints\n","import React from 'react';\nimport './Sidebar.css'\nimport { slide as Menu } from 'react-burger-menu';\nimport {\n  CalendarOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  DashboardOutlined\n} from \"@ant-design/icons\";\nimport { BrowserRouter as Router,Routes,Route, Link } from 'react-router-dom';\nimport Result from \"../user/pages/Result\";\nimport Dashboard from '../user/pages/Dashboard';\nimport AllSemesterResult from '../user/pages/AllSemesterResult';\nimport Complaint from './pages/Complaint';\nimport SubmittedComplaints from './pages/SubmittedComplaints';\n\nconst Sidebar = () => {\n  return (\n    <Router>\n      <Menu>\n        <Link className=\"menu-item\" to='/'>\n          <DashboardOutlined />&nbsp; Dashboard\n      </Link>\n      <Link className=\"menu-item\" to='/Complaint'>\n          <FileOutlined />&nbsp; Add Complaint\n      </Link>\n        <Link className=\"menu-item\" to=\"/submittedComplaints\">\n          <CalendarOutlined />&nbsp; Your Complaints\n      </Link>\n        <Link className=\"menu-item\" to=\"/result\">\n          <PieChartOutlined />&nbsp; Results\n      </Link>\n      </Menu>\n      <Routes>\n        <Route path=\"/\" element={<Dashboard />} exact />\n        <Route path=\"/result\" element={<Result />} exact />\n        <Route path=\"/AllDegreeResult\" element={<AllSemesterResult />} exact />\n        <Route path=\"/Complaint\" element={<Complaint />} exact />\n        <Route path=\"/submittedComplaints\" element={<SubmittedComplaints />} exact />\n      </Routes>\n    </Router>\n  );\n}\nexport default Sidebar","import React from \"react\";\nimport Navbar from './user/Navbar'\nimport Sidebar from './user/Sidebar'\n\nconst ItStudent = () => {\n  return (\n    <div>\n     <Navbar />\n     <Sidebar pageWrapId={'page-wrap'} outerContainerId={'outer-container'} />\n    </div>\n  );\n};\n\nexport default ItStudent;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport ItAdmin from './IT/ItAdmin'\nimport ItStudent from './IT/ItStudent'\nimport logo from './IT/loader-images/final-uot.gif'\n\nfunction App() {\n  // navigator.serviceWorker.register('/firebase-messaging-sw.js');\n  const { isAuthenticated, isLoading, user } = useAuth0();\n  const [role, setRole] = React.useState();\n  const { loginWithRedirect } = useAuth0();\n\n  React.useEffect(() => {\n    if (user) {\n      setRole(user[\"https://fauna.com/user_metadata\"].role);\n    }\n  }, [user]);\n\n  if (isLoading) {\n    return (\n      <center>\n    <img style={{marginTop:'15%'}} src={logo} alt='loading...' width={200} height={200}/>\n    </center>\n    )\n  }\n\n  if (isAuthenticated) {\n    console.log(role)\n    return (\n      <React.Fragment>\n        <>\n          {role === \"admi\" && <ItAdmin />}\n          {role === \"student\" && <ItStudent />}\n        </>\n      </React.Fragment>\n    );\n  } else {\n    loginWithRedirect();\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react'\n// import IT_Admin from './IT/IT_Admin'\n// // import IT_Student from './IT/IT_Student'\n\n// const App = () => {\n//   return (\n//     <div>\n//       <IT_Admin/>\n//       {/* <IT_Student/> */}\n//     </div>\n//   )\n// }\n\n// export default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Auth0Provider } from \"@auth0/auth0-react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.Fragment>\n    <Auth0Provider\n      domain={process.env.REACT_APP_DOMAIN}\n      clientId={process.env.REACT_APP_CLIENT_ID}\n      redirectUri={window.location.origin}\n    >\n        <App />\n    </Auth0Provider>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/final-uot.de251820.gif\";"],"sourceRoot":""}